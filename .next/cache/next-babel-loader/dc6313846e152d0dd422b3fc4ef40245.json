{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Link from '../../utils/ActiveLink';\nimport SearchModal from '../Modals/SearchModal';\nimport ShoppingCartModal from '../Modals/ShoppingCartModal';\nimport SidebarModal from '../Modals/SidebarModal';\n\nvar Navbar = /*#__PURE__*/function (_Component) {\n  _inherits(Navbar, _Component);\n\n  var _super = _createSuper(Navbar);\n\n  function Navbar() {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      display: false,\n      collapsed: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleNavbar\", function () {\n      _this.setState({\n        collapsed: !_this.state.collapsed\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleModalSearch\", function () {\n      _this.setState({\n        SearchModal: !_this.state.SearchModal\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleModalCart\", function () {\n      _this.setState({\n        ShoppingCartModal: !_this.state.ShoppingCartModal\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleModalSidebar\", function () {\n      _this.setState({\n        SidebarModal: !_this.state.SidebarModal\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var elementId = document.getElementById(\"navbar\");\n      document.addEventListener(\"scroll\", function () {\n        if (window.scrollY > 170) {\n          elementId.classList.add(\"is-sticky\");\n        } else {\n          elementId.classList.remove(\"is-sticky\");\n        }\n      });\n      window.scrollTo(0, 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    } // Search Modal\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var products = this.props.products;\n      var collapsed = this.state.collapsed;\n      var classNameOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n      var classNameTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        id: \"navbar\",\n        className: \"navbar-area\"\n      }, __jsx(\"div\", {\n        className: \"main-nav\"\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"nav\", {\n        className: \"navbar navbar-expand-md navbar-light\"\n      }, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", {\n        className: \"navbar-brand\"\n      }, __jsx(\"img\", {\n        src: require(\"../../images/logo.png\"),\n        alt: \"logo\"\n      }))), __jsx(\"button\", {\n        onClick: this.toggleNavbar,\n        className: classNameTwo,\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarSupportedContent\",\n        \"aria-controls\": \"navbarSupportedContent\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\"\n      }, __jsx(\"span\", {\n        className: \"icon-bar top-bar\"\n      }), __jsx(\"span\", {\n        className: \"icon-bar middle-bar\"\n      }), __jsx(\"span\", {\n        className: \"icon-bar bottom-bar\"\n      })))))), __jsx(SearchModal, {\n        onClick: this.toggleModalSearch,\n        active: this.state.SearchModal ? 'active' : ''\n      }), __jsx(ShoppingCartModal, {\n        onClick: this.toggleModalCart,\n        active: this.state.ShoppingCartModal ? 'active' : ''\n      }), __jsx(SidebarModal, {\n        onClick: this.toggleModalSidebar,\n        active: this.state.SidebarModal ? 'active' : ''\n      }));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {// products: state.addedItems\n  };\n};\n\nexport default Navbar;","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/Layouts/Navbar.js"],"names":["React","Component","Link","SearchModal","ShoppingCartModal","SidebarModal","Navbar","display","collapsed","setState","state","elementId","document","getElementById","addEventListener","window","scrollY","classList","add","remove","scrollTo","_isMounted","products","props","classNameOne","classNameTwo","require","toggleNavbar","toggleModalSearch","toggleModalCart","toggleModalSidebar","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from '../../utils/ActiveLink';\r\nimport SearchModal from '../Modals/SearchModal';\r\nimport ShoppingCartModal from '../Modals/ShoppingCartModal';\r\nimport SidebarModal from '../Modals/SidebarModal';\r\n\r\nclass Navbar extends Component {\r\n    // Navbar \r\n    _isMounted = false;\r\n    state = {\r\n        display: false,\r\n        collapsed: true\r\n    };\r\n    toggleNavbar = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        let elementId = document.getElementById(\"navbar\");\r\n        document.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 170) {\r\n                elementId.classList.add(\"is-sticky\");\r\n            } else {\r\n                elementId.classList.remove(\"is-sticky\");\r\n            }\r\n        });\r\n        window.scrollTo(0, 0);\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    // Search Modal\r\n    toggleModalSearch = () => {\r\n        this.setState({\r\n            SearchModal: !this.state.SearchModal\r\n        });\r\n    }\r\n    \r\n    // Shopping Cart Modal\r\n    toggleModalCart = () => {\r\n        this.setState({\r\n            ShoppingCartModal: !this.state.ShoppingCartModal\r\n        });\r\n    }\r\n\r\n    // Sidebar Modal\r\n    toggleModalSidebar = () => {\r\n        this.setState({\r\n            SidebarModal: !this.state.SidebarModal\r\n        });\r\n    }\r\n \r\n    render() {\r\n\r\n        const { products } = this.props;\r\n        const { collapsed } = this.state;\r\n        const classNameOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n        const classNameTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"navbar\" className=\"navbar-area\">\r\n                    <div className=\"main-nav\">\r\n                        <div className=\"container\">\r\n                            <nav className=\"navbar navbar-expand-md navbar-light\">\r\n                                <Link href=\"/\">\r\n                                    <a className=\"navbar-brand\">\r\n                                        <img src={require(\"../../images/logo.png\")} alt=\"logo\" />\r\n                                    </a>\r\n                                </Link>\r\n\r\n                                <button \r\n                                    onClick={this.toggleNavbar} \r\n                                    className={classNameTwo}\r\n                                    type=\"button\" \r\n                                    data-toggle=\"collapse\" \r\n                                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" \r\n                                    aria-expanded=\"false\" \r\n                                    aria-label=\"Toggle navigation\"\r\n                                >\r\n                                    <span className=\"icon-bar top-bar\"></span>\r\n                                    <span className=\"icon-bar middle-bar\"></span>\r\n                                    <span className=\"icon-bar bottom-bar\"></span>\r\n                                </button>\r\n\r\n                                \r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                {/* Search Modal */}\r\n                <SearchModal \r\n                    onClick={this.toggleModalSearch} \r\n                    active={this.state.SearchModal ? 'active' : ''} \r\n                />\r\n\r\n                {/* Shopping Cart Modal */}\r\n                <ShoppingCartModal \r\n                    onClick={this.toggleModalCart} \r\n                    active={this.state.ShoppingCartModal ? 'active' : ''} \r\n                />\r\n\r\n                {/* Sidebar Modal */}\r\n                <SidebarModal \r\n                    onClick={this.toggleModalSidebar} \r\n                    active={this.state.SidebarModal ? 'active' : ''} \r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        // products: state.addedItems\r\n    }\r\n}\r\n\r\nexport default (Navbar);"]},"metadata":{},"sourceType":"module"}