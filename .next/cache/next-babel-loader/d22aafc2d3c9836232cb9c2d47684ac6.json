{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify'; // import { removeItem } from '../../store/actions/cartActions';\n\nclass ShoppingCartModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modal: false\n    });\n\n    _defineProperty(this, \"handleRemove\", id => {\n      // this.props.removeItem(id);\n      toast.error('Removed from cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.props.onClick(this.state.modal);\n    });\n  }\n\n  render() {\n    let cartItems = 1 === 2 ? this.props.products.map((product, idx) => {\n      return __jsx(\"div\", {\n        className: \"products-cart-content\",\n        key: idx\n      }, __jsx(\"div\", {\n        className: \"products-cart\"\n      }, __jsx(\"div\", {\n        className: \"products-image\"\n      }, __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", null, __jsx(\"img\", {\n        src: product.imageUrl,\n        alt: \"image\"\n      })))), __jsx(\"div\", {\n        className: \"products-content\"\n      }, __jsx(\"h3\", null, __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", null, product.title))), __jsx(\"div\", {\n        className: \"products-price\"\n      }, __jsx(\"span\", null, product.quantity), __jsx(\"span\", null, \"x\"), __jsx(\"span\", {\n        className: \"price\"\n      }, \"$\", product.newPrice)), __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", {\n        className: \"remove-btn\",\n        onClick: e => {\n          e.preventDefault();\n          this.handleRemove(product.id);\n        }\n      }, __jsx(\"i\", {\n        className: \"bx bx-trash\"\n      }))))));\n    }) : __jsx(\"div\", {\n      className: \"products-cart-content\"\n    }, __jsx(\"p\", null, \"Empty.\"));\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: `shoppingCartModal right ${this.props.active}`\n    }, __jsx(\"div\", {\n      className: \"modal-innter-content\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      onClick: this.closeModal\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, __jsx(\"i\", {\n      className: \"bx bx-x\"\n    }))), __jsx(\"div\", {\n      className: \"modal-body\"\n    }, __jsx(\"h3\", null, \"Gi\\u1ECF h\\xE0ng c\\u1EE7a t\\xF4i (2)\"), cartItems, __jsx(\"div\", {\n      className: \"products-cart-subtotal\"\n    }, __jsx(\"span\", null, \"Subtotal\"), __jsx(\"span\", {\n      className: \"subtotal\"\n    }, \"$\", this.props.total)), __jsx(\"div\", {\n      className: \"products-cart-btn\"\n    }, __jsx(Link, {\n      href: \"/checkout\"\n    }, __jsx(\"a\", {\n      className: \"default-btn\"\n    }, \"Proceed to Checkout\")), __jsx(Link, {\n      href: \"/cart\"\n    }, __jsx(\"a\", {\n      className: \"optional-btn\"\n    }, \"View Shopping Cart\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {// products: state.addedItems,\n    // total: state.total\n  };\n}; // const mapDispatchToProps = (dispatch) => {\n//     return {\n//         removeItem: (id) => {dispatch(removeItem(id))}\n//     }\n// }\n\n\nexport default ShoppingCartModal;","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/Modals/ShoppingCartModal.js"],"names":["React","Component","Link","connect","toast","ShoppingCartModal","modal","id","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","props","onClick","state","render","cartItems","products","map","product","idx","imageUrl","title","quantity","newPrice","e","preventDefault","handleRemove","active","closeModal","total","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n// import { removeItem } from '../../store/actions/cartActions';\r\n\r\nclass ShoppingCartModal extends Component {\r\n\r\n    state = {\r\n        modal: false\r\n    };\r\n\r\n    handleRemove = (id) => {\r\n        // this.props.removeItem(id);\r\n        toast.error('Removed from cart', {\r\n            position: \"bottom-left\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.onClick(this.state.modal);\r\n    }\r\n    \r\n    \r\n    render() {\r\n        let cartItems = 1=== 2 ? \r\n        (\r\n            this.props.products.map((product, idx) => {\r\n                return(\r\n                    <div className=\"products-cart-content\" key={idx}>\r\n                        <div className=\"products-cart\">\r\n                            <div className=\"products-image\">\r\n                                <Link href=\"#\">\r\n                                    <a>\r\n                                        <img src={product.imageUrl} alt=\"image\" />\r\n                                    </a>\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div className=\"products-content\">\r\n                                <h3>\r\n                                    <Link href=\"#\">\r\n                                        <a>{product.title}</a>\r\n                                    </Link>\r\n                                </h3>\r\n\r\n                                <div className=\"products-price\">\r\n                                    <span>{product.quantity}</span>\r\n                                    <span>x</span>\r\n                                    <span className=\"price\">${product.newPrice}</span>\r\n                                </div>\r\n\r\n                                <Link href=\"#\">\r\n                                    <a \r\n                                        className=\"remove-btn\"\r\n                                        onClick={(e)=>{e.preventDefault();this.handleRemove(product.id)}}\r\n                                    >\r\n                                        <i className='bx bx-trash'></i>\r\n                                    </a>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        ) : (\r\n            <div className=\"products-cart-content\">\r\n                <p>Empty.</p>\r\n            </div>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`shoppingCartModal right ${this.props.active}`}> \r\n                    <div className=\"modal-innter-content\">\r\n                        <button type=\"button\" className=\"close\" onClick={this.closeModal}>\r\n                            <span aria-hidden=\"true\">\r\n                                <i className='bx bx-x'></i>\r\n                            </span>\r\n                        </button>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <h3>Giỏ hàng của tôi (2)</h3>\r\n\r\n                            {cartItems}\r\n\r\n                            <div className=\"products-cart-subtotal\">\r\n                                <span>Subtotal</span>\r\n                                <span className=\"subtotal\">${this.props.total}</span>\r\n                            </div>\r\n\r\n                            <div className=\"products-cart-btn\">\r\n                                <Link href=\"/checkout\">\r\n                                    <a className=\"default-btn\">Proceed to Checkout</a>\r\n                                </Link>\r\n                                \r\n                                <Link href=\"/cart\">\r\n                                    <a className=\"optional-btn\">View Shopping Cart</a>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // products: state.addedItems,\r\n        // total: state.total\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         removeItem: (id) => {dispatch(removeItem(id))}\r\n//     }\r\n// }\r\n\r\nexport default(ShoppingCartModal)"]},"metadata":{},"sourceType":"module"}