{"ast":null,"code":"var _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\Cart\\\\CartProvider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useReducer } from \"react\";\nimport CartContext from \"../../contexts/CartContext\";\n\nconst cartReducer = (state, action) => {\n  // User Logout\n  if (action.type === USRER_LOGOUT) {\n    cookie.remove('_livani_token_');\n    return _objectSpread(_objectSpread({}, state), {}, {\n      login: false\n    });\n  } // Check if user login\n\n\n  if (action.type === CHECK_USRER_LOGIN) {\n    const getToken = cookie.get('_livani_token_');\n\n    if (getToken == token) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  } // User Login\n\n\n  if (action.type === USRER_LOGIN) {\n    cookie.set('_livani_token_', token);\n    const getToken = cookie.get('_livani_token_'); // console.log('token', getToken)\n\n    if (getToken == token) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  }\n\n  if (action.type === ADD_PRODUCTS) {\n    let productsArray = [];\n    dbOrderRef.get().then(res => {\n      res.forEach(doc => {\n        let productsObj = doc.data();\n        productsObj.id = doc.id;\n        productsArray.push(productsObj);\n      });\n    }); // console.log('www', productsArray)\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      products: productsArray\n    });\n  }\n\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_QUANTITY_WITH_NUMBER) {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice * action.qty\n      });\n    } else {\n      addedItem.quantity = action.qty; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice * action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.newPrice * itemToRemove.quantity;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  }\n\n  if (action.type === ADD_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.newPrice;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: newTotal\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: new_items,\n        total: newTotal\n      });\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 30\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 30\n    });\n  }\n\n  if (action.type === RESET_CART) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nexport const CartProvider = ({\n  children\n}) => {\n  const {\n    0: cart,\n    1: dispatchCart\n  } = useReducer(cartReducer, {\n    products: [],\n    addedItems: [],\n    total: 0,\n    shipping: 0,\n    login: false\n  });\n\n  const updateNumber = () => {\n    setNumber({\n      number: Math.random()\n    });\n  };\n\n  return __jsx(CartContext.Provider, {\n    value: {\n      number: number,\n      updateNumber: updateNumber\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/Cart/CartProvider.js"],"names":["React","useState","useReducer","CartContext","cartReducer","state","action","type","USRER_LOGOUT","cookie","remove","login","CHECK_USRER_LOGIN","getToken","get","token","USRER_LOGIN","set","ADD_PRODUCTS","productsArray","dbOrderRef","then","res","forEach","doc","productsObj","data","id","push","products","ADD_TO_CART","addedItem","find","item","existed_item","addedItems","quantity","total","newPrice","newTotal","ADD_QUANTITY_WITH_NUMBER","qty","REMOVE_ITEM","itemToRemove","new_items","filter","ADD_QUANTITY","SUB_QUANTITY","ADD_SHIPPING","shipping","RESET_CART","CartProvider","children","cart","dispatchCart","updateNumber","setNumber","number","Math","random"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAEnC;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgBC,YAApB,EAAkC;AAC9BC,IAAAA,MAAM,CAACC,MAAP,CAAc,gBAAd;AACA,2CACOL,KADP;AAEIM,MAAAA,KAAK,EAAE;AAFX;AAIH,GATkC,CAWnC;;;AACA,MAAIL,MAAM,CAACC,IAAP,KAAgBK,iBAApB,EAAuC;AACnC,UAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAP,CAAW,gBAAX,CAAjB;;AAEA,QAAID,QAAQ,IAAIE,KAAhB,EAAuB;AACnB,6CACOV,KADP;AAEIM,QAAAA,KAAK,EAAE;AAFX;AAIH,KALD,MAKO;AACH,6CACON,KADP;AAEIM,QAAAA,KAAK,EAAE;AAFX;AAIH;AACJ,GA1BkC,CA4BnC;;;AACA,MAAIL,MAAM,CAACC,IAAP,KAAgBS,WAApB,EAAiC;AAC7BP,IAAAA,MAAM,CAACQ,GAAP,CAAW,gBAAX,EAA6BF,KAA7B;AAEA,UAAMF,QAAQ,GAAGJ,MAAM,CAACK,GAAP,CAAW,gBAAX,CAAjB,CAH6B,CAK7B;;AAEA,QAAID,QAAQ,IAAIE,KAAhB,EAAuB;AACnB,6CACOV,KADP;AAEIM,QAAAA,KAAK,EAAE;AAFX;AAIH,KALD,MAKO;AACH,6CACON,KADP;AAEIM,QAAAA,KAAK,EAAE;AAFX;AAIH;AAEJ;;AAED,MAAIL,MAAM,CAACC,IAAP,KAAgBW,YAApB,EAAkC;AAC9B,QAAIC,aAAa,GAAG,EAApB;AACAC,IAAAA,UAAU,CAACN,GAAX,GACKO,IADL,CACUC,GAAG,IAAI;AACTA,MAAAA,GAAG,CAACC,OAAJ,CAAYC,GAAG,IAAI;AACf,YAAIC,WAAW,GAAGD,GAAG,CAACE,IAAJ,EAAlB;AACAD,QAAAA,WAAW,CAACE,EAAZ,GAAiBH,GAAG,CAACG,EAArB;AACAR,QAAAA,aAAa,CAACS,IAAd,CAAmBH,WAAnB;AACH,OAJD;AAKH,KAPL,EAF8B,CAW9B;;AAEA,2CACOpB,KADP;AAEIwB,MAAAA,QAAQ,EAAEV;AAFd;AAIH;;AAED,MAAIb,MAAM,CAACC,IAAP,KAAgBuB,WAApB,EAAiC;AAC7B,QAAIC,SAAS,GAAG1B,KAAK,CAACwB,QAAN,CAAeG,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYrB,MAAM,CAACqB,EAA/C,CAAhB,CAD6B,CAE7B;;AACA,QAAIO,YAAY,GAAG7B,KAAK,CAAC8B,UAAN,CAAiBH,IAAjB,CAAsBC,IAAI,IAAI3B,MAAM,CAACqB,EAAP,KAAcM,IAAI,CAACN,EAAjD,CAAnB;;AACA,QAAIO,YAAJ,EAAkB;AACdH,MAAAA,SAAS,CAACK,QAAV,IAAsB,CAAtB;AACA,6CACO/B,KADP;AAEIgC,QAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAAN,GAAcN,SAAS,CAACO;AAFnC;AAIH,KAND,MAMO;AACHP,MAAAA,SAAS,CAACK,QAAV,GAAqB,CAArB,CADG,CAEH;;AACA,UAAIG,QAAQ,GAAGlC,KAAK,CAACgC,KAAN,GAAcN,SAAS,CAACO,QAAvC;AAEA,6CACOjC,KADP;AAEI8B,QAAAA,UAAU,EAAE,CAAC,GAAG9B,KAAK,CAAC8B,UAAV,EAAsBJ,SAAtB,CAFhB;AAGIM,QAAAA,KAAK,EAAEE;AAHX;AAMH;AACJ;;AAED,MAAIjC,MAAM,CAACC,IAAP,KAAgBiC,wBAApB,EAA8C;AAC1C,QAAIT,SAAS,GAAG1B,KAAK,CAACwB,QAAN,CAAeG,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYrB,MAAM,CAACqB,EAA/C,CAAhB,CAD0C,CAE1C;;AACA,QAAIO,YAAY,GAAG7B,KAAK,CAAC8B,UAAN,CAAiBH,IAAjB,CAAsBC,IAAI,IAAI3B,MAAM,CAACqB,EAAP,KAAcM,IAAI,CAACN,EAAjD,CAAnB;;AACA,QAAIO,YAAJ,EAAkB;AACdH,MAAAA,SAAS,CAACK,QAAV,IAAsB9B,MAAM,CAACmC,GAA7B;AACA,6CACOpC,KADP;AAEIgC,QAAAA,KAAK,EAAEhC,KAAK,CAACgC,KAAN,GAAcN,SAAS,CAACO,QAAV,GAAqBhC,MAAM,CAACmC;AAFrD;AAIH,KAND,MAMO;AACHV,MAAAA,SAAS,CAACK,QAAV,GAAqB9B,MAAM,CAACmC,GAA5B,CADG,CAEH;;AACA,UAAIF,QAAQ,GAAGlC,KAAK,CAACgC,KAAN,GAAcN,SAAS,CAACO,QAAV,GAAqBhC,MAAM,CAACmC,GAAzD;AAEA,6CACOpC,KADP;AAEI8B,QAAAA,UAAU,EAAE,CAAC,GAAG9B,KAAK,CAAC8B,UAAV,EAAsBJ,SAAtB,CAFhB;AAGIM,QAAAA,KAAK,EAAEE;AAHX;AAMH;AACJ;;AAGD,MAAIjC,MAAM,CAACC,IAAP,KAAgBmC,WAApB,EAAiC;AAC7B,QAAIC,YAAY,GAAGtC,KAAK,CAAC8B,UAAN,CAAiBH,IAAjB,CAAsBC,IAAI,IAAI3B,MAAM,CAACqB,EAAP,KAAcM,IAAI,CAACN,EAAjD,CAAnB;AACA,QAAIiB,SAAS,GAAGvC,KAAK,CAAC8B,UAAN,CAAiBU,MAAjB,CAAwBZ,IAAI,IAAI3B,MAAM,CAACqB,EAAP,KAAcM,IAAI,CAACN,EAAnD,CAAhB,CAF6B,CAI7B;;AACA,QAAIY,QAAQ,GAAGlC,KAAK,CAACgC,KAAN,GAAeM,YAAY,CAACL,QAAb,GAAwBK,YAAY,CAACP,QAAnE;AAEA,2CACO/B,KADP;AAEI8B,MAAAA,UAAU,EAAES,SAFhB;AAGIP,MAAAA,KAAK,EAAEE;AAHX;AAKH;;AAED,MAAIjC,MAAM,CAACC,IAAP,KAAgBuC,YAApB,EAAkC;AAC9B,QAAIf,SAAS,GAAG1B,KAAK,CAACwB,QAAN,CAAeG,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYrB,MAAM,CAACqB,EAA/C,CAAhB;AACAI,IAAAA,SAAS,CAACK,QAAV,IAAsB,CAAtB;AACA,QAAIG,QAAQ,GAAGlC,KAAK,CAACgC,KAAN,GAAcN,SAAS,CAACO,QAAvC;AACA,2CACOjC,KADP;AAEIgC,MAAAA,KAAK,EAAEE;AAFX;AAIH;;AAED,MAAIjC,MAAM,CAACC,IAAP,KAAgBwC,YAApB,EAAkC;AAC9B,QAAIhB,SAAS,GAAG1B,KAAK,CAACwB,QAAN,CAAeG,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYrB,MAAM,CAACqB,EAA/C,CAAhB,CAD8B,CAE9B;;AACA,QAAII,SAAS,CAACK,QAAV,KAAuB,CAA3B,EAA8B;AAC1B,UAAIQ,SAAS,GAAGvC,KAAK,CAAC8B,UAAN,CAAiBU,MAAjB,CAAwBZ,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYrB,MAAM,CAACqB,EAAnD,CAAhB;AACA,UAAIY,QAAQ,GAAGlC,KAAK,CAACgC,KAAN,GAAcN,SAAS,CAACO,QAAvC;AACA,6CACOjC,KADP;AAEI8B,QAAAA,UAAU,EAAES,SAFhB;AAGIP,QAAAA,KAAK,EAAEE;AAHX;AAKH,KARD,MAQO;AACHR,MAAAA,SAAS,CAACK,QAAV,IAAsB,CAAtB;AACA,UAAIG,QAAQ,GAAGlC,KAAK,CAACgC,KAAN,GAAcN,SAAS,CAACO,QAAvC;AACA,6CACOjC,KADP;AAEIgC,QAAAA,KAAK,EAAEE;AAFX;AAIH;AAEJ;;AAED,MAAIjC,MAAM,CAACC,IAAP,KAAgByC,YAApB,EAAkC;AAC9B,2CACO3C,KADP;AAEI4C,MAAAA,QAAQ,EAAE5C,KAAK,CAAC4C,QAAN,IAAkB;AAFhC;AAIH;;AAED,MAAI3C,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAChC,2CACOF,KADP;AAEI4C,MAAAA,QAAQ,EAAE5C,KAAK,CAAC4C,QAAN,IAAkB;AAFhC;AAIH;;AAED,MAAI3C,MAAM,CAACC,IAAP,KAAgB2C,UAApB,EAAgC;AAC5B,2CACO7C,KADP;AAEI8B,MAAAA,UAAU,EAAE,EAFhB;AAGIE,MAAAA,KAAK,EAAE,CAHX;AAIIY,MAAAA,QAAQ,EAAE;AAJd;AAMH,GAPD,MASK;AACD,WAAO5C,KAAP;AACH;AACJ,CA9LD;;AA+LA,OAAO,MAAM8C,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAuBpD,UAAU,CAACE,WAAD,EAAc;AACjDyB,IAAAA,QAAQ,EAAE,EADuC;AAEjDM,IAAAA,UAAU,EAAE,EAFqC;AAGjDE,IAAAA,KAAK,EAAE,CAH0C;AAIjDY,IAAAA,QAAQ,EAAE,CAJuC;AAKjDtC,IAAAA,KAAK,EAAE;AAL0C,GAAd,CAAvC;;AAQA,QAAM4C,YAAY,GAAG,MAAM;AACvBC,IAAAA,SAAS,CAAC;AACNC,MAAAA,MAAM,EAAEC,IAAI,CAACC,MAAL;AADF,KAAD,CAAT;AAGH,GAJD;;AAKA,SACI,MAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHF,MAAAA,MAAM,EAAEA,MADL;AAEHF,MAAAA,YAAY,EAAEA;AAFX,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKH,QANL,CADJ;AAWH,CAzBM","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\n\r\nimport CartContext from \"../../contexts/CartContext\";\r\n\r\nconst cartReducer = (state, action) => {\r\n\r\n    // User Logout\r\n    if (action.type === USRER_LOGOUT) {\r\n        cookie.remove('_livani_token_')\r\n        return {\r\n            ...state,\r\n            login: false\r\n        }\r\n    }\r\n\r\n    // Check if user login\r\n    if (action.type === CHECK_USRER_LOGIN) {\r\n        const getToken = cookie.get('_livani_token_')\r\n\r\n        if (getToken == token) {\r\n            return {\r\n                ...state,\r\n                login: true\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                login: false\r\n            }\r\n        }\r\n    }\r\n\r\n    // User Login\r\n    if (action.type === USRER_LOGIN) {\r\n        cookie.set('_livani_token_', token);\r\n\r\n        const getToken = cookie.get('_livani_token_')\r\n\r\n        // console.log('token', getToken)\r\n\r\n        if (getToken == token) {\r\n            return {\r\n                ...state,\r\n                login: true\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                login: false\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (action.type === ADD_PRODUCTS) {\r\n        let productsArray = [];\r\n        dbOrderRef.get()\r\n            .then(res => {\r\n                res.forEach(doc => {\r\n                    let productsObj = doc.data();\r\n                    productsObj.id = doc.id;\r\n                    productsArray.push(productsObj)\r\n                });\r\n            });\r\n\r\n        // console.log('www', productsArray)\r\n\r\n        return {\r\n            ...state,\r\n            products: productsArray\r\n        }\r\n    }\r\n\r\n    if (action.type === ADD_TO_CART) {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        if (existed_item) {\r\n            addedItem.quantity += 1\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice\r\n            }\r\n        } else {\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice\r\n\r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total: newTotal\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (action.type === ADD_QUANTITY_WITH_NUMBER) {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        if (existed_item) {\r\n            addedItem.quantity += action.qty\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice * action.qty\r\n            }\r\n        } else {\r\n            addedItem.quantity = action.qty;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice * action.qty\r\n\r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total: newTotal\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    if (action.type === REMOVE_ITEM) {\r\n        let itemToRemove = state.addedItems.find(item => action.id === item.id)\r\n        let new_items = state.addedItems.filter(item => action.id !== item.id)\r\n\r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.newPrice * itemToRemove.quantity);\r\n\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === ADD_QUANTITY) {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        addedItem.quantity += 1\r\n        let newTotal = state.total + addedItem.newPrice\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === SUB_QUANTITY) {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //if the qt == 0 then it should be removed\r\n        if (addedItem.quantity === 1) {\r\n            let new_items = state.addedItems.filter(item => item.id !== action.id)\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        } else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (action.type === ADD_SHIPPING) {\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping += 30\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SUB_SHIPPING') {\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping -= 30\r\n        }\r\n    }\r\n\r\n    if (action.type === RESET_CART) {\r\n        return {\r\n            ...state,\r\n            addedItems: [],\r\n            total: 0,\r\n            shipping: 0\r\n        }\r\n    }\r\n\r\n    else {\r\n        return state\r\n    }\r\n}\r\nexport const CartProvider = ({ children }) => {\r\n    const [cart, dispatchCart] = useReducer(cartReducer, {\r\n        products: [],\r\n        addedItems: [],\r\n        total: 0,\r\n        shipping: 0,\r\n        login: false\r\n    })\r\n\r\n    const updateNumber = () => {\r\n        setNumber({\r\n            number: Math.random()\r\n        });\r\n    }\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                number: number,\r\n                updateNumber: updateNumber\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}