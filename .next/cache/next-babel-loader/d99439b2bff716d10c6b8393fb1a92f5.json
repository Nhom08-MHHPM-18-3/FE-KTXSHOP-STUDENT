{"ast":null,"code":"var _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\payments\\\\Payment.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from \"axios\";\nimport Router from 'next/router';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nclass Payments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onToken\", async token => {\n      const body = {\n        customerDetails: {\n          firstName: this.props.userData.firstName.value,\n          lastName: this.props.userData.lastName.value,\n          email: this.props.userData.email.value,\n          phone: this.props.userData.phone.value,\n          address: this.props.userData.address.value,\n          city: this.props.userData.city.value,\n          state: this.props.userData.state.value,\n          zip: this.props.userData.zip.value\n        },\n        items: _objectSpread({}, this.props.products),\n        amount: this.props.total,\n        status: 'pending',\n        token: token,\n        createdAt: new Date()\n      };\n      await axios.post(\"/api/checkout\", body);\n      const db = firebase.firestore();\n      const dbOrderRef = db.collection('orders');\n      dbOrderRef.add(body).then(() => {\n        this.props.resetCart();\n        toast.success('Submitted the order, we will contact you soon.', {\n          position: \"bottom-left\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setTimeout(() => {\n          Router.push('/');\n        }, 3000);\n      });\n    });\n  }\n\n  render() {\n    let {\n      amount\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"order-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, __jsx(StripeCheckout, {\n      name: \"Livani\",\n      description: \"React Next eCommerce Templates\",\n      amount: amount,\n      currency: \"USD\",\n      token: this.onToken,\n      stripeKey: \"pk_test_ZaZZWZGlvdIn12yFleIqyjSI00G4e18Kf7\",\n      billingAddress: false,\n      closed: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, __jsx(\"button\", {\n      disabled: this.props.disabled,\n      className: `default-btn`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"Place Order\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems,\n    total: state.total\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetCart: () => {\n      dispatch(resetCart());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/payments/Payment.js"],"names":["React","axios","Router","StripeCheckout","connect","toast","Payments","Component","token","body","customerDetails","firstName","props","userData","value","lastName","email","phone","address","city","state","zip","items","products","amount","total","status","createdAt","Date","post","db","firebase","firestore","dbOrderRef","collection","add","then","resetCart","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","setTimeout","push","render","onToken","handleClick","disabled","mapStateToProps","addedItems","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from \"axios\"\r\nimport Router from 'next/router'\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nclass Payments extends React.Component {\r\n    onToken = async token => {\r\n        const body = {\r\n            customerDetails: {\r\n                firstName: this.props.userData.firstName.value,\r\n                lastName: this.props.userData.lastName.value,\r\n                email: this.props.userData.email.value,\r\n                phone: this.props.userData.phone.value,\r\n                address: this.props.userData.address.value,\r\n                city: this.props.userData.city.value,\r\n                state: this.props.userData.state.value,\r\n                zip: this.props.userData.zip.value\r\n            },\r\n            items: {...this.props.products},\r\n            amount: this.props.total,\r\n            status: 'pending',\r\n            token: token,\r\n            createdAt: new Date()\r\n        };  \r\n        await axios.post(\"/api/checkout\", body);\r\n        const db = firebase.firestore();\r\n        const dbOrderRef = db.collection('orders');\r\n        dbOrderRef.add(body).then(() => {\r\n            this.props.resetCart();\r\n            toast.success('Submitted the order, we will contact you soon.', {\r\n                position: \"bottom-left\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true\r\n            });\r\n            setTimeout(() => {Router.push('/')},3000);  \r\n        });\r\n    };\r\n\r\n    render(){\r\n        let { amount } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"order-btn\">\r\n                    <StripeCheckout \r\n                        name=\"Livani\"\r\n                        description=\"React Next eCommerce Templates\"\r\n                        amount={amount}\r\n                        currency=\"USD\"\r\n                        token={this.onToken}\r\n                        stripeKey=\"pk_test_ZaZZWZGlvdIn12yFleIqyjSI00G4e18Kf7\"\r\n                        billingAddress={false}\r\n                        closed={this.handleClick}\r\n                    >\r\n                        <button disabled={this.props.disabled} className={`default-btn`} >\r\n                            Place Order\r\n                        </button>\r\n                    </StripeCheckout>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.addedItems,\r\n        total: state.total,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch)=>{\r\n    return {\r\n        resetCart: () => { dispatch(resetCart()) }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Payments)"]},"metadata":{},"sourceType":"module"}