{"ast":null,"code":"var _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\payments\\\\Payment.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { toast } from 'react-toastify';\n\nconst Payments = () => {\n  const handlePayment = async () => {\n    let myHeaders = new Headers();\n    const jwt = localStorage.getItem('jwt-ktxshop');\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    await fetch(process.env.API_HOST + `/api/accounts${jwt}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        data: {\n          AccountID: jwt,\n          ProductID: product.id,\n          Quantity: quantity || 1,\n          UnitCost: product.attributes.Price,\n          Subtotal: product.attributes.Price\n        }\n      }),\n      headers: myHeaders\n    }).then(response => response.json()).then(result => {\n      dispatchCart({\n        type: 'ADD_TO_CART',\n        data: result.data,\n        product: product\n      });\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"order-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    disabled: this.props.disabled,\n    className: `default-btn`,\n    onClick: handlePayment(this.props.userData, this.props.stateSchema),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"\\u0110\\u1EB7t h\\xE0ng\")));\n};\n\n_c = Payments;\nexport default Payments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/payments/Payment.js"],"names":["React","Router","StripeCheckout","toast","Payments","handlePayment","myHeaders","Headers","jwt","localStorage","getItem","append","fetch","process","env","API_HOST","method","body","JSON","stringify","data","AccountID","ProductID","product","id","Quantity","quantity","UnitCost","attributes","Price","Subtotal","headers","then","response","json","result","dispatchCart","type","props","disabled","userData","stateSchema"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,aAAa,GAAG,YAAY;AAC9B,QAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACA,UAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;AACAJ,IAAAA,SAAS,CAACK,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACA,UAAMC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAwB,gBAAeP,GAAI,EAA5C,EAA+C;AACtDQ,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAEb,GADT;AAEFc,UAAAA,SAAS,EAAEC,OAAO,CAACC,EAFjB;AAGFC,UAAAA,QAAQ,EAAEC,QAAQ,IAAI,CAHpB;AAIFC,UAAAA,QAAQ,EAAEJ,OAAO,CAACK,UAAR,CAAmBC,KAJ3B;AAKFC,UAAAA,QAAQ,EAAEP,OAAO,CAACK,UAAR,CAAmBC;AAL3B;AADW,OAAf,CAFgD;AAWtDE,MAAAA,OAAO,EAAEzB;AAX6C,KAA/C,CAAL,CAaD0B,IAbC,CAaIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAbhB,EAcDF,IAdC,CAcIG,MAAM,IAAI;AACZC,MAAAA,YAAY,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBjB,QAAAA,IAAI,EAAEe,MAAM,CAACf,IAApC;AAA0CG,QAAAA,OAAO,EAAEA;AAAnD,OAAD,CAAZ;AACH,KAhBC,CAAN;AAkBH,GAtBD;;AAwBA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWC,QAA7B;AAAuC,IAAA,SAAS,EAAG,aAAnD;AAAiE,IAAA,OAAO,EAAElC,aAAa,CAAC,KAAKiC,KAAL,CAAWE,QAAZ,EAAqB,KAAKF,KAAL,CAAWG,WAAhC,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,CADJ;AASH,CAlCD;;KAAMrC,Q;AAqCN,eAAgBA,QAAhB","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router'\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst Payments = () => {\r\n    const handlePayment = async () => {\r\n        let myHeaders = new Headers();\r\n        const jwt = localStorage.getItem('jwt-ktxshop');\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        await fetch(process.env.API_HOST + `/api/accounts${jwt}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                data: {\r\n                    AccountID: jwt,\r\n                    ProductID: product.id,\r\n                    Quantity: quantity || 1,\r\n                    UnitCost: product.attributes.Price,\r\n                    Subtotal: product.attributes.Price,\r\n                }\r\n            }),\r\n            headers: myHeaders\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                dispatchCart({ type: 'ADD_TO_CART', data: result.data, product: product })\r\n            })\r\n        \r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"order-btn\">\r\n                <button disabled={this.props.disabled} className={`default-btn`} onClick={handlePayment(this.props.userData,this.props.stateSchema)}>\r\n                    Đặt hàng\r\n                </button>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default (Payments)"]},"metadata":{},"sourceType":"module"}