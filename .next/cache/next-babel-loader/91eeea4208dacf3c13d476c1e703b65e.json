{"ast":null,"code":"var _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\payments\\\\Payment.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { toast } from 'react-toastify';\n\nconst Payments = () => {\n  const handlePayment = async (cart, userData) => {\n    let myHeaders = new Headers();\n    const jwt = localStorage.getItem('jwt-ktxshop');\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    await fetch(process.env.API_HOST + `/api/accounts/${jwt}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        data: {\n          Address: user\n        }\n      }),\n      headers: myHeaders\n    }).then(response => response.json()).then(result => {\n      dispatchCart({\n        type: 'ADD_TO_CART',\n        data: result.data,\n        product: product\n      });\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"order-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    disabled: this.props.disabled,\n    className: `default-btn`,\n    onClick: handlePayment(this.props.userData, this.props.stateSchema),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"\\u0110\\u1EB7t h\\xE0ng\")));\n};\n\n_c = Payments;\nexport default Payments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/payments/Payment.js"],"names":["React","Router","StripeCheckout","toast","Payments","handlePayment","cart","userData","myHeaders","Headers","jwt","localStorage","getItem","append","fetch","process","env","API_HOST","method","body","JSON","stringify","data","Address","user","headers","then","response","json","result","dispatchCart","type","product","props","disabled","stateSchema"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,aAAa,GAAG,OAAOC,IAAP,EAAaC,QAAb,KAA0B;AAC5C,QAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACA,UAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;AACAJ,IAAAA,SAAS,CAACK,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACA,UAAMC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAwB,iBAAgBP,GAAI,EAA7C,EAAgD;AACvDQ,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,IAAI,EAAE;AACHC,UAAAA,OAAO,EAAEC;AADN;AADW,OAAf,CAFiD;AAOvDC,MAAAA,OAAO,EAAEjB;AAP8C,KAAhD,CAAL,CASDkB,IATC,CASIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAThB,EAUDF,IAVC,CAUIG,MAAM,IAAI;AACZC,MAAAA,YAAY,CAAC;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBT,QAAAA,IAAI,EAAEO,MAAM,CAACP,IAApC;AAA0CU,QAAAA,OAAO,EAAEA;AAAnD,OAAD,CAAZ;AACH,KAZC,CAAN;AAcH,GAlBD;;AAoBA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAA7B;AAAuC,IAAA,SAAS,EAAG,aAAnD;AAAiE,IAAA,OAAO,EAAE7B,aAAa,CAAC,KAAK4B,KAAL,CAAW1B,QAAZ,EAAqB,KAAK0B,KAAL,CAAWE,WAAhC,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,CADJ;AASH,CA9BD;;KAAM/B,Q;AAiCN,eAAgBA,QAAhB","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router'\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst Payments = () => {\r\n    const handlePayment = async (cart, userData) => {\r\n        let myHeaders = new Headers();\r\n        const jwt = localStorage.getItem('jwt-ktxshop');\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        await fetch(process.env.API_HOST + `/api/accounts/${jwt}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                data: {\r\n                   Address: user\r\n                }\r\n            }),\r\n            headers: myHeaders\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                dispatchCart({ type: 'ADD_TO_CART', data: result.data, product: product })\r\n            })\r\n        \r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"order-btn\">\r\n                <button disabled={this.props.disabled} className={`default-btn`} onClick={handlePayment(this.props.userData,this.props.stateSchema)}>\r\n                    Đặt hàng\r\n                </button>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default (Payments)"]},"metadata":{},"sourceType":"module"}