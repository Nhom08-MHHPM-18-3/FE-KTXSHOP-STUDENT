{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify'; // import { removeItem, addQuantity, subtractQuantity } from '../../store/actions/cartActions';\n\nclass CartTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleRemove\", id => {\n      this.props.removeItem(id);\n      toast.error('Removed from cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"handleAddQuantity\", id => {\n      this.props.addQuantity(id);\n    });\n\n    _defineProperty(this, \"handleSubtractQuantity\", id => {\n      this.props.subtractQuantity(id);\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n    });\n  }\n\n  render() {\n    let cartItems = this.props.products.length ? this.props.products.map((data, idx) => {\n      return __jsx(\"tr\", {\n        key: idx\n      }, __jsx(\"td\", {\n        className: \"product-thumbnail\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, __jsx(\"img\", {\n        src: data.imageUrl,\n        alt: \"item\"\n      }))), __jsx(\"td\", {\n        className: \"product-name\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, data.title)), __jsx(\"td\", {\n        className: \"product-price\"\n      }, __jsx(\"span\", {\n        className: \"unit-amount\"\n      }, \"$\", data.newPrice)), __jsx(\"td\", {\n        className: \"product-quantity\"\n      }, __jsx(\"div\", {\n        className: \"input-counter\"\n      }, __jsx(\"span\", {\n        className: \"minus-btn\",\n        onClick: () => {\n          this.handleSubtractQuantity(data.id);\n        }\n      }, __jsx(\"i\", {\n        className: \"bx bx-minus\"\n      })), __jsx(\"input\", {\n        type: \"text\",\n        value: data.quantity,\n        min: \"1\",\n        max: 10,\n        readOnly: true,\n        onChange: e => e\n      }), __jsx(\"span\", {\n        className: \"plus-btn\",\n        onClick: () => {\n          this.handleAddQuantity(data.id);\n        }\n      }, __jsx(\"i\", {\n        className: \"bx bx-plus\"\n      })))), __jsx(\"td\", {\n        className: \"product-subtotal\"\n      }, __jsx(\"span\", {\n        className: \"subtotal-amount\"\n      }, \"$\", data.newPrice * data.quantity), __jsx(Link, {\n        href: \"#\"\n      }, __jsx(\"a\", {\n        className: \"remove\",\n        onClick: e => {\n          e.preventDefault();\n          this.handleRemove(data.id);\n        }\n      }, __jsx(\"i\", {\n        className: \"bx bx-trash\"\n      })))));\n    }) : __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"product-thumbnail\",\n      colSpan: \"6\"\n    }, __jsx(\"p\", null, \"Empty.\")));\n    return __jsx(\"section\", {\n      className: \"cart-area ptb-100\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"form\", null, __jsx(\"div\", {\n      className: \"cart-table table-responsive\"\n    }, __jsx(\"table\", {\n      className: \"table table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Product\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Name\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Unit Price\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Quantity\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Total\"))), __jsx(\"tbody\", null, cartItems))), __jsx(\"div\", {\n      className: \"cart-buttons\"\n    }, __jsx(\"div\", {\n      className: \"row align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-6 col-md-6\"\n    }, __jsx(Link, {\n      href: \"/products-without-sidebar\"\n    }, __jsx(\"a\", {\n      className: \"optional-btn\"\n    }, \"Continue Shopping\"))), __jsx(\"div\", {\n      className: \"col-lg-6 col-md-6\"\n    }, __jsx(\"div\", {\n      className: \"cart-totals\"\n    }, __jsx(\"h3\", null, \"Cart Totals\"), __jsx(\"ul\", null, __jsx(\"li\", null, \"Subtotal \", __jsx(\"span\", null, \"$\", this.props.total.toFixed(2))), __jsx(\"li\", null, \"Shipping \", __jsx(\"span\", null, \"$30.00\")), __jsx(\"li\", null, \"Total \", __jsx(\"span\", null, \"$\", (this.props.total + 30).toFixed(2)))), __jsx(Link, {\n      href: \"/checkout\"\n    }, __jsx(\"a\", {\n      className: \"default-btn\"\n    }, \"Proceed to Checkout\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems,\n    total: state.total\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeItem: id => {\n      dispatch(removeItem(id));\n    },\n    addQuantity: id => {\n      dispatch(addQuantity(id));\n    },\n    subtractQuantity: id => {\n      dispatch(subtractQuantity(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/Cart/CartTable.js"],"names":["React","Component","Link","connect","toast","CartTable","id","props","removeItem","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","addQuantity","subtractQuantity","e","preventDefault","render","cartItems","products","length","map","data","idx","imageUrl","title","newPrice","handleSubtractQuantity","quantity","handleAddQuantity","handleRemove","total","toFixed","mapStateToProps","state","addedItems","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CACA;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;;AAAA,0CACdK,EAAD,IAAQ;AACnB,WAAKC,KAAL,CAAWC,UAAX,CAAsBF,EAAtB;AAEAF,MAAAA,KAAK,CAACK,KAAN,CAAY,mBAAZ,EAAiC;AAC7BC,QAAAA,QAAQ,EAAE,aADmB;AAE7BC,QAAAA,SAAS,EAAE,IAFkB;AAG7BC,QAAAA,eAAe,EAAE,KAHY;AAI7BC,QAAAA,YAAY,EAAE,IAJe;AAK7BC,QAAAA,YAAY,EAAE,IALe;AAM7BC,QAAAA,SAAS,EAAE;AANkB,OAAjC;AAQH,KAZ6B;;AAAA,+CAcTT,EAAD,IAAM;AACtB,WAAKC,KAAL,CAAWS,WAAX,CAAuBV,EAAvB;AACH,KAhB6B;;AAAA,oDAkBJA,EAAD,IAAM;AAC3B,WAAKC,KAAL,CAAWU,gBAAX,CAA4BX,EAA5B;AACH,KApB6B;;AAAA,0CAsBdY,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACH,KAxB6B;AAAA;;AA0B9BC,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,KAAKd,KAAL,CAAWe,QAAX,CAAoBC,MAApB,GAEZ,KAAKhB,KAAL,CAAWe,QAAX,CAAoBE,GAApB,CAAwB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACnC,aACI;AAAI,QAAA,GAAG,EAAEA;AAAT,SACI;AAAI,QAAA,SAAS,EAAC;AAAd,SACI;AAAG,QAAA,IAAI,EAAC;AAAR,SACI;AAAK,QAAA,GAAG,EAAED,IAAI,CAACE,QAAf;AAAyB,QAAA,GAAG,EAAC;AAA7B,QADJ,CADJ,CADJ,EAOI;AAAI,QAAA,SAAS,EAAC;AAAd,SACI;AAAG,QAAA,IAAI,EAAC;AAAR,SAAaF,IAAI,CAACG,KAAlB,CADJ,CAPJ,EAWI;AAAI,QAAA,SAAS,EAAC;AAAd,SACI;AAAM,QAAA,SAAS,EAAC;AAAhB,cAAgCH,IAAI,CAACI,QAArC,CADJ,CAXJ,EAeI;AAAI,QAAA,SAAS,EAAC;AAAd,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AACI,QAAA,SAAS,EAAC,WADd;AAEI,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKC,sBAAL,CAA4BL,IAAI,CAACnB,EAAjC;AAAqC;AAFvD,SAII;AAAG,QAAA,SAAS,EAAC;AAAb,QAJJ,CADJ,EAOI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEmB,IAAI,CAACM,QAFhB;AAGI,QAAA,GAAG,EAAC,GAHR;AAII,QAAA,GAAG,EAAE,EAJT;AAKI,QAAA,QAAQ,EAAE,IALd;AAMI,QAAA,QAAQ,EAAEb,CAAC,IAAKA;AANpB,QAPJ,EAeI;AACI,QAAA,SAAS,EAAC,UADd;AAEI,QAAA,OAAO,EAAE,MAAI;AAAC,eAAKc,iBAAL,CAAuBP,IAAI,CAACnB,EAA5B;AAAgC;AAFlD,SAII;AAAG,QAAA,SAAS,EAAC;AAAb,QAJJ,CAfJ,CADJ,CAfJ,EAwCI;AAAI,QAAA,SAAS,EAAC;AAAd,SACI;AAAM,QAAA,SAAS,EAAC;AAAhB,cAAoCmB,IAAI,CAACI,QAAL,GAAgBJ,IAAI,CAACM,QAAzD,CADJ,EAGI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SACI;AAAG,QAAA,SAAS,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAGb,CAAD,IAAK;AAACA,UAAAA,CAAC,CAACC,cAAF;AAAmB,eAAKc,YAAL,CAAkBR,IAAI,CAACnB,EAAvB;AAA2B;AAAnF,SACI;AAAG,QAAA,SAAS,EAAC;AAAb,QADJ,CADJ,CAHJ,CAxCJ,CADJ;AAoDH,KArDD,CAFY,GAyDZ,kBACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAkC,MAAA,OAAO,EAAC;AAA1C,OACI,0BADJ,CADJ,CAzDJ;AA+DA,WACI;AAAS,MAAA,SAAS,EAAC;AAAnB,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,oBACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAO,MAAA,SAAS,EAAC;AAAjB,OACI,qBACI,kBACI;AAAI,MAAA,KAAK,EAAC;AAAV,iBADJ,EAEI;AAAI,MAAA,KAAK,EAAC;AAAV,cAFJ,EAGI;AAAI,MAAA,KAAK,EAAC;AAAV,oBAHJ,EAII;AAAI,MAAA,KAAK,EAAC;AAAV,kBAJJ,EAKI;AAAI,MAAA,KAAK,EAAC;AAAV,eALJ,CADJ,CADJ,EAWI,qBACMe,SADN,CAXJ,CADJ,CADJ,EAmBI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,2BADJ,CADJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,gCADJ,EAGI,kBACI,+BAAa,yBAAQ,KAAKd,KAAL,CAAW2B,KAAX,CAAiBC,OAAjB,CAAyB,CAAzB,CAAR,CAAb,CADJ,EAEI,+BAAa,6BAAb,CAFJ,EAGI,4BAAU,yBAAQ,CAAC,KAAK5B,KAAL,CAAW2B,KAAX,GAAmB,EAApB,EAAwBC,OAAxB,CAAgC,CAAhC,CAAR,CAAV,CAHJ,CAHJ,EASI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACI;AAAG,MAAA,SAAS,EAAC;AAAb,6BADJ,CATJ,CADJ,CAPJ,CADJ,CAnBJ,CADJ,CADJ,CADJ;AAmDH;;AA7I6B;;AAgJlC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHf,IAAAA,QAAQ,EAAEe,KAAK,CAACC,UADb;AAEHJ,IAAAA,KAAK,EAAEG,KAAK,CAACH;AAFV,GAAP;AAIH,CALD;;AAOA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHhC,IAAAA,UAAU,EAAGF,EAAD,IAAQ;AAACkC,MAAAA,QAAQ,CAAChC,UAAU,CAACF,EAAD,CAAX,CAAR;AAAyB,KAD3C;AAEHU,IAAAA,WAAW,EAAGV,EAAD,IAAQ;AAACkC,MAAAA,QAAQ,CAACxB,WAAW,CAACV,EAAD,CAAZ,CAAR;AAA0B,KAF7C;AAGHW,IAAAA,gBAAgB,EAAGX,EAAD,IAAQ;AAACkC,MAAAA,QAAQ,CAACvB,gBAAgB,CAACX,EAAD,CAAjB,CAAR;AAA+B;AAHvD,GAAP;AAKH,CAND;;AAQA,eAAeH,OAAO,CAClBiC,eADkB,EAElBG,kBAFkB,CAAP,CAGblC,SAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n// import { removeItem, addQuantity, subtractQuantity } from '../../store/actions/cartActions';\r\n\r\nclass CartTable extends Component {\r\n    handleRemove = (id) => {\r\n        this.props.removeItem(id);\r\n\r\n        toast.error('Removed from cart', {\r\n            position: \"bottom-left\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true\r\n        });\r\n    }\r\n    //to add the quantity\r\n    handleAddQuantity = (id)=>{\r\n        this.props.addQuantity(id);\r\n    }\r\n    //to substruct from the quantity\r\n    handleSubtractQuantity = (id)=>{\r\n        this.props.subtractQuantity(id);\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        let cartItems = this.props.products.length ? \r\n        (\r\n            this.props.products.map((data, idx) => {\r\n                return(\r\n                    <tr key={idx}>\r\n                        <td className=\"product-thumbnail\">\r\n                            <a href=\"#\">\r\n                                <img src={data.imageUrl} alt=\"item\" />\r\n                            </a>\r\n                        </td>\r\n\r\n                        <td className=\"product-name\">\r\n                            <a href=\"#\">{data.title}</a>\r\n                        </td>\r\n\r\n                        <td className=\"product-price\">\r\n                            <span className=\"unit-amount\">${data.newPrice}</span>\r\n                        </td>\r\n\r\n                        <td className=\"product-quantity\">\r\n                            <div className=\"input-counter\">\r\n                                <span \r\n                                    className=\"minus-btn\"\r\n                                    onClick={()=>{this.handleSubtractQuantity(data.id)}}\r\n                                >\r\n                                    <i className='bx bx-minus'></i>\r\n                                </span>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={data.quantity} \r\n                                    min=\"1\" \r\n                                    max={10} \r\n                                    readOnly={true}\r\n                                    onChange={e => (e)}\r\n                                />\r\n                                <span \r\n                                    className=\"plus-btn\"\r\n                                    onClick={()=>{this.handleAddQuantity(data.id)}}\r\n                                >\r\n                                    <i className='bx bx-plus'></i>\r\n                                </span>\r\n                            </div>\r\n                        </td>\r\n\r\n                        <td className=\"product-subtotal\">\r\n                            <span className=\"subtotal-amount\">${data.newPrice * data.quantity}</span>\r\n                        \r\n                            <Link href=\"#\">\r\n                                <a className=\"remove\" onClick={(e)=>{e.preventDefault();this.handleRemove(data.id)}}>\r\n                                    <i className='bx bx-trash'></i>\r\n                                </a>\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        ) : (\r\n            <tr>\r\n                <td className=\"product-thumbnail\" colSpan=\"6\">\r\n                    <p>Empty.</p>\r\n                </td>\r\n            </tr>\r\n        )\r\n        return (\r\n            <section className=\"cart-area ptb-100\">\r\n                <div className=\"container\">\r\n                    <form>\r\n                        <div className=\"cart-table table-responsive\">\r\n                            <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Product</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Unit Price</th>\r\n                                        <th scope=\"col\">Quantity</th>\r\n                                        <th scope=\"col\">Total</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    { cartItems }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div className=\"cart-buttons\">\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <Link href=\"/products-without-sidebar\">\r\n                                        <a className=\"optional-btn\">Continue Shopping</a>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-6 col-md-6\">\r\n                                    <div className=\"cart-totals\">\r\n                                        <h3>Cart Totals</h3>\r\n\r\n                                        <ul>\r\n                                            <li>Subtotal <span>${this.props.total.toFixed(2)}</span></li>\r\n                                            <li>Shipping <span>$30.00</span></li>\r\n                                            <li>Total <span>${(this.props.total + 30).toFixed(2)}</span></li>\r\n                                        </ul>\r\n                                        \r\n                                        <Link href=\"/checkout\">\r\n                                            <a className=\"default-btn\">Proceed to Checkout</a>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeItem: (id) => {dispatch(removeItem(id))},\r\n        addQuantity: (id) => {dispatch(addQuantity(id))},\r\n        subtractQuantity: (id) => {dispatch(subtractQuantity(id))}\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    mapDispatchToProps\r\n)(CartTable)"]},"metadata":{},"sourceType":"module"}