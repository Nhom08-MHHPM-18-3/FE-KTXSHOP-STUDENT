{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ProductDetailsTab from './ProductDetailsTab';\nimport ProductImage from './ProductImage';\n\nconst hookClass = props => {\n  const router = useRouter();\n  return __jsx(ProductDetailsStyleOne, _extends({}, props, {\n    router: router\n  }));\n};\n\nclass ProductDetailsStyleOne extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      qty: 1,\n      max: 10,\n      min: 1\n    });\n\n    _defineProperty(this, \"handleAddToCart\", (id, qty) => {\n      console.log(id, qty);\n      this.props.cart.addToCart(Number(id), qty);\n      toast.success('Added to the cart', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n\n    _defineProperty(this, \"incrementItem\", () => {\n      this.setState(prevState => {\n        if (prevState.qty < 10) {\n          return {\n            qty: prevState.qty + 1\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n\n    _defineProperty(this, \"decreaseItem\", () => {\n      this.setState(prevState => {\n        if (prevState.qty > 1) {\n          return {\n            qty: prevState.qty - 1\n          };\n        } else {\n          return null;\n        }\n      });\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    const offer = false;\n    return __jsx(\"section\", {\n      className: \"product-details-area pt-100 pb-70\"\n    }, __jsx(ToastContainer, null), __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-lg-5 col-md-12\"\n    }, __jsx(ProductImage, {\n      imageUrl: `${this.props.product.imageUrl}`\n    })), __jsx(\"div\", {\n      className: \"col-lg-7 col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"products-details-desc\"\n    }, __jsx(\"h3\", null, this.props.product.ProductName), __jsx(\"div\", {\n      className: \"price\"\n    }, offer ? __jsx(React.Fragment, null, __jsx(\"span\", {\n      className: \"old-price\"\n    }, Intl.NumberFormat().format(this.props.product.Price)), __jsx(\"span\", {\n      className: \"new-price\"\n    }, Intl.NumberFormat().format(this.props.product.Price))) : __jsx(\"span\", {\n      className: \"new-price\"\n    }, Intl.NumberFormat().format(this.props.product.Price))), __jsx(\"div\", {\n      className: \"products-review\"\n    }, __jsx(\"div\", {\n      className: \"rating\"\n    }, __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }), __jsx(\"i\", {\n      className: \"bx bx-star\"\n    }))), __jsx(\"ul\", {\n      className: \"products-info\"\n    }, __jsx(\"li\", null, __jsx(\"span\", null, \"S\\u1ED1 l\\u01B0\\u1EE3ng h\\xE0ng c\\xF2n: \"), __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault()\n    }, this.props.product.Quantity)))), __jsx(\"div\", {\n      className: \"products-info-btn\"\n    }, __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      onClick: e => e.preventDefault(),\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#productsShippingModal\"\n    }, __jsx(\"i\", {\n      className: \"bx bxs-truck\"\n    }), \"Shipping\"))), __jsx(\"div\", {\n      className: \"products-add-to-cart\"\n    }, __jsx(\"div\", {\n      className: \"input-counter\"\n    }, __jsx(\"span\", {\n      className: \"minus-btn\",\n      onClick: this.decreaseItem\n    }, __jsx(\"i\", {\n      className: \"bx bx-minus\"\n    })), __jsx(\"input\", {\n      type: \"text\",\n      value: this.state.qty,\n      min: this.state.min,\n      max: this.state.max,\n      onChange: e => this.setState({\n        qty: e.target.value\n      })\n    }), __jsx(\"span\", {\n      className: \"plus-btn\",\n      onClick: this.incrementItem\n    }, __jsx(\"i\", {\n      className: \"bx bx-plus\"\n    }))), __jsx(\"button\", {\n      className: \"default-btn\",\n      onClick: () => this.handleAddToCart(this.props.id, this.state.qty)\n    }, __jsx(\"i\", {\n      className: \"fas fa-cart-plus\"\n    }), \"Th\\xEAm v\\xE0o gi\\u1ECF\")), __jsx(\"div\", {\n      className: \"buy-checkbox-btn\"\n    }, __jsx(\"div\", {\n      className: \"item\"\n    }, __jsx(Link, {\n      href: \"/checkout\"\n    }, __jsx(\"a\", {\n      onClick: () => this.handleAddToCart(this.props.id, this.state.qty),\n      className: \"default-btn\"\n    }, \"Thanh to\\xE1n ngay\"))))))), __jsx(ProductDetailsTab, {\n      product: this.props.product\n    })));\n  }\n\n}\n\nexport default hookClass;","map":null,"metadata":{},"sourceType":"module"}