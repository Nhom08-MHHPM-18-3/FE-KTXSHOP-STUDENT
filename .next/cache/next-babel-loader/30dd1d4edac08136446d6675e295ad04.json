{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { toast } from 'react-toastify';\n\nconst handleOrder = async data => {\n  const timeElapsed = Date.now();\n  const today = new Date(timeElapsed);\n  fetch(process.env.API_HOST + `/api/orders`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: {\n        AccountID: data.attributes.AccountID,\n        Status: 'PROCESSING',\n        CodeDiscount: '',\n        ProductID: data.attributes.ProductID,\n        Quantity: data.attributes.Quantity,\n        UnitCost: data.attributes.UnitCost,\n        Subtotal: data.attributes.Subtotal,\n        PurchaseDate: today.toDateString()\n      }\n    })\n  }).then(response => response.json()).then(data => {});\n};\n\nclass Payments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handlePayment\", async (cart, userData) => {\n      const jwt = localStorage.getItem('jwt-ktxshop');\n      fetch(process.env.API_HOST + `/api/accounts/${jwt}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: {\n            PhoneNumber: userData.phone.value,\n            FullName: userData.fullName.value,\n            Address: userData.address.value\n          }\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      cart.cart.addedItems.map(item => {\n        cart.removeItem(item.id);\n        handleOrder(item);\n      });\n      toast.success('Đặt hàng thành công', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      setTimeout(this.home, 2000);\n    });\n\n    _defineProperty(this, \"home\", () => {\n      Router.push('/');\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"order-btn\"\n    }, __jsx(\"button\", {\n      disabled: this.props.disabled,\n      className: `default-btn`,\n      onClick: () => this.handlePayment(this.props.userData, this.props.stateSchema)\n    }, \"\\u0110\\u1EB7t h\\xE0ng\")));\n  }\n\n}\n\nexport default Payments;","map":null,"metadata":{},"sourceType":"module"}