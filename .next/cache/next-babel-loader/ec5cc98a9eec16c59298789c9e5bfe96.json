{"ast":null,"code":"var _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\Cart\\\\CartProvider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useReducer, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport CartContext from \"../../contexts/CartContext\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD_PRODUCTS') {\n    let productsArray = [];\n    productsArray = action.payload; // console.log('www', productsArray)\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      products: productsArray\n    });\n  }\n\n  if (action.type === 'INIT_CART') {\n    let productsArray = [];\n    productsArray = action.payload;\n    let newTotal = 0;\n    const temp = action.payload;\n    let cart = [];\n\n    for (let i = 0; i < action.payload.length; i++) {\n      const product = state.products.find(item => item.id === temp[i].attributes.ProductID);\n      newTotal += temp[i].attributes.Subtotal;\n      cart.push(_objectSpread(_objectSpread({}, temp[i]), {}, {\n        product\n      }));\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: cart,\n      total: newTotal\n    });\n  }\n\n  if (action.type === 'ADD_TO_CART') {\n    const product = action.product;\n    const cart = state.addedItems;\n    cart.push(_objectSpread(_objectSpread({}, action.data), {}, {\n      product\n    }));\n    let newTotal = state.total + action.product.Price;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: cart,\n      total: newTotal\n    });\n  }\n\n  if (action.type === 'ADD_QUANTITY_WITH_NUMBER') {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice * action.qty\n      });\n    } else {\n      addedItem.quantity = action.qty; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice * action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === 'REMOVE_ITEM') {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    fetch(process.env.API_HOST + `/api/shopping-carts${action.id}`, {\n      method: 'DELETE',\n      headers: myHeaders\n    });\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.attributes.Subtotal;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  }\n\n  if (action.type === 'ADD_QUANTITY') {\n    let addedItem = state.products.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.newPrice;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: newTotal\n    });\n  }\n\n  if (action.type === 'SUB_QUANTITY') {\n    let addedItem = state.products.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: new_items,\n        total: newTotal\n      });\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === 'ADD_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 30\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 30\n    });\n  }\n\n  if (action.type === 'RESET_CART') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nexport const CartProvider = ({\n  children\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: shoppingCart,\n    1: setShoppingCart\n  } = useState([]);\n  const {\n    0: cart,\n    1: dispatchCart\n  } = useReducer(cartReducer, {\n    products: [],\n    addedItems: [],\n    total: 0,\n    shipping: 0\n  });\n\n  const removeItem = id => {\n    dispatchCart({\n      type: 'REMOVE_ITEM',\n      id: id\n    });\n  };\n\n  const addToCart = async (id, quantity) => {\n    let product = cart.products.find(item => item.id === id);\n    const jwt = localStorage.getItem('jwt-ktxshop');\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    await fetch(process.env.API_HOST + '/api/shopping-carts', {\n      method: 'POST',\n      body: JSON.stringify({\n        data: {\n          AccountID: jwt,\n          ProductID: product.id,\n          Quantity: quantity || 1,\n          UnitCost: product.attributes.Price,\n          Subtotal: product.attributes.Price\n        }\n      }),\n      headers: myHeaders\n    }).then(response => response.json()).then(result => {\n      dispatchCart({\n        type: 'ADD_TO_CART',\n        data: result.data,\n        product: product\n      });\n    });\n  };\n\n  const addQuantity = id => {\n    dispatchCart({\n      type: 'ADD_QUANTITY',\n      id: id\n    });\n  };\n\n  const subQuantity = id => {\n    dispatchCart({\n      type: 'SUB_QUANTITY',\n      id: id\n    });\n  };\n\n  useEffect(() => {\n    fecthProduct();\n  }, []);\n\n  const fecthProduct = async () => {\n    const qs = require('qs');\n\n    const query = qs.stringify({\n      sort: ['id:desc'],\n      populate: '*'\n    }, {\n      encodeValuesOnly: true\n    });\n    await fetch(process.env.API_HOST + `/api/products?${query}`).then(response => response.json()).then(res => {\n      if (res.data && res.data[0] && res.data[0].attributes) {\n        const dataProduct = res.data;\n        dataProduct.map((item, index) => {\n          data.push(item);\n          setData([...data]);\n          dispatchCart({\n            type: 'ADD_PRODUCTS',\n            payload: data\n          }); //dispatchCart({ type: 'INIT_CART', payload: data })\n        });\n      }\n    });\n    const jwt = localStorage.getItem('jwt-ktxshop');\n    const qry = qs.stringify({\n      filters: {\n        AccountID: {\n          $eq: Number(jwt)\n        }\n      }\n    }, {\n      encodeValuesOnly: true\n    });\n    await fetch(process.env.API_HOST + `/api/shopping-carts?${qry}`).then(response => response.json()).then(res => {\n      if (res.data && res.data[0] && res.data[0].attributes) {\n        const dataCart = res.data;\n        dataCart.map((item, index) => {\n          shoppingCart.push(item);\n          setShoppingCart([...shoppingCart]);\n          dispatchCart({\n            type: 'INIT_CART',\n            payload: shoppingCart\n          });\n        });\n      }\n    });\n  };\n\n  return __jsx(CartContext.Provider, {\n    value: {\n      cart: cart,\n      removeItem: removeItem,\n      addToCart: addToCart,\n      addQuantity: addQuantity,\n      subQuantity: subQuantity\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/Cart/CartProvider.js"],"names":["React","useState","useReducer","useEffect","useContext","UserContext","CartContext","cartReducer","state","action","type","productsArray","payload","products","newTotal","temp","cart","i","length","product","find","item","id","attributes","ProductID","Subtotal","push","addedItems","total","data","Price","addedItem","existed_item","quantity","qty","newPrice","myHeaders","Headers","append","fetch","process","env","API_HOST","method","headers","itemToRemove","new_items","filter","shipping","CartProvider","children","setData","shoppingCart","setShoppingCart","dispatchCart","removeItem","addToCart","jwt","localStorage","getItem","body","JSON","stringify","AccountID","Quantity","UnitCost","then","response","json","result","addQuantity","subQuantity","fecthProduct","qs","require","query","sort","populate","encodeValuesOnly","res","dataProduct","map","index","qry","filters","$eq","Number","dataCart"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\nimport CartContext from \"../../contexts/CartContext\";\r\n\r\nconst cartReducer = (state, action) => {\r\n\r\n\r\n    if (action.type === 'ADD_PRODUCTS') {\r\n        let productsArray = [];\r\n        productsArray = action.payload;\r\n\r\n        // console.log('www', productsArray)\r\n\r\n        return {\r\n            ...state,\r\n            products: productsArray\r\n        }\r\n    }\r\n    if (action.type === 'INIT_CART') {\r\n        let productsArray = [];\r\n        productsArray = action.payload;\r\n        let newTotal = 0;\r\n        const temp = action.payload;\r\n        let cart = [];\r\n        for (let i = 0; i < action.payload.length; i++) {\r\n            const product = state.products.find(item => item.id === temp[i].attributes.ProductID);\r\n            newTotal += temp[i].attributes.Subtotal;\r\n            cart.push({ ...temp[i], product })\r\n        }\r\n        return {\r\n            ...state,\r\n            addedItems: cart,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === 'ADD_TO_CART') {\r\n        const product = action.product;\r\n        const cart = state.addedItems\r\n        cart.push({ ...action.data, product })\r\n        let newTotal = state.total + action.product.Price;\r\n\r\n        return {\r\n            ...state,\r\n            addedItems: cart,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === 'ADD_QUANTITY_WITH_NUMBER') {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        if (existed_item) {\r\n            addedItem.quantity += action.qty\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice * action.qty\r\n            }\r\n        } else {\r\n            addedItem.quantity = action.qty;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice * action.qty\r\n\r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total: newTotal\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    if (action.type === 'REMOVE_ITEM') {\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        fetch(process.env.API_HOST + `/api/shopping-carts${action.id}`, {\r\n            method: 'DELETE',\r\n            headers: myHeaders\r\n        })\r\n        let itemToRemove = state.addedItems.find(item => action.id === item.id)\r\n        let new_items = state.addedItems.filter(item => action.id !== item.id)\r\n\r\n        //calculating the total\r\n        let newTotal = state.total - itemToRemove.attributes.Subtotal;\r\n\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === 'ADD_QUANTITY') {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        addedItem.quantity += 1\r\n        let newTotal = state.total + addedItem.newPrice\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SUB_QUANTITY') {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //if the qt == 0 then it should be removed\r\n        if (addedItem.quantity === 1) {\r\n            let new_items = state.addedItems.filter(item => item.id !== action.id)\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        } else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (action.type === 'ADD_SHIPPING') {\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping += 30\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SUB_SHIPPING') {\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping -= 30\r\n        }\r\n    }\r\n\r\n    if (action.type === 'RESET_CART') {\r\n        return {\r\n            ...state,\r\n            addedItems: [],\r\n            total: 0,\r\n            shipping: 0\r\n        }\r\n    }\r\n\r\n    else {\r\n        return state\r\n    }\r\n}\r\n\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [data, setData] = useState([]);\r\n    const [shoppingCart, setShoppingCart] = useState([]);\r\n    const [cart, dispatchCart] = useReducer(cartReducer, {\r\n        products: [],\r\n        addedItems: [],\r\n        total: 0,\r\n        shipping: 0,\r\n    })\r\n\r\n    const removeItem = (id) => {\r\n        dispatchCart({ type: 'REMOVE_ITEM', id: id })\r\n    }\r\n    const addToCart = async (id, quantity) => {\r\n        let product = cart.products.find(item => item.id === id)\r\n        const jwt = localStorage.getItem('jwt-ktxshop');\r\n\r\n        let myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        await fetch(process.env.API_HOST + '/api/shopping-carts', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                data: {\r\n                    AccountID: jwt,\r\n                    ProductID: product.id,\r\n                    Quantity: quantity || 1,\r\n                    UnitCost: product.attributes.Price,\r\n                    Subtotal: product.attributes.Price,\r\n                }\r\n            }),\r\n            headers: myHeaders\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                dispatchCart({ type: 'ADD_TO_CART', data: result.data, product: product })\r\n            })\r\n\r\n    }\r\n    const addQuantity = (id) => {\r\n        dispatchCart({ type: 'ADD_QUANTITY', id: id })\r\n    }\r\n    const subQuantity = (id) => {\r\n        dispatchCart({ type: 'SUB_QUANTITY', id: id })\r\n    }\r\n    useEffect(() => {\r\n        fecthProduct();\r\n    }, [])\r\n    const fecthProduct = async () => {\r\n        const qs = require('qs');\r\n        const query = qs.stringify({\r\n            sort: ['id:desc',],\r\n            populate: '*'\r\n        }, {\r\n            encodeValuesOnly: true,\r\n        });\r\n\r\n        await fetch(process.env.API_HOST + `/api/products?${query}`)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.data && res.data[0] && res.data[0].attributes) {\r\n                    const dataProduct = res.data;\r\n                    dataProduct.map((item, index) => {\r\n                        data.push(item)\r\n                        setData([...data])\r\n                        dispatchCart({ type: 'ADD_PRODUCTS', payload: data })\r\n                        //dispatchCart({ type: 'INIT_CART', payload: data })\r\n                    })\r\n                }\r\n            });\r\n        const jwt = localStorage.getItem('jwt-ktxshop');\r\n        const qry = qs.stringify({\r\n            filters: {\r\n                AccountID: {\r\n                    $eq: Number(jwt),\r\n                },\r\n            },\r\n        }, {\r\n            encodeValuesOnly: true,\r\n        });\r\n        await fetch(process.env.API_HOST + `/api/shopping-carts?${qry}`)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.data && res.data[0] && res.data[0].attributes) {\r\n                    const dataCart = res.data;\r\n                    dataCart.map((item, index) => {\r\n                        shoppingCart.push(item)\r\n                        setShoppingCart([...shoppingCart])\r\n                        dispatchCart({ type: 'INIT_CART', payload: shoppingCart })\r\n                    })\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                cart: cart,\r\n                removeItem: removeItem,\r\n                addToCart: addToCart,\r\n                addQuantity: addQuantity,\r\n                subQuantity: subQuantity,\r\n\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}