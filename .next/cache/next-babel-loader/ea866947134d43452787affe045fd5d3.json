{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\payments\\\\Payment.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { toast } from 'react-toastify';\n\nconst handleOrder = async data => {\n  const timeElapsed = Date.now();\n  const today = new Date(timeElapsed);\n  let myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  await fetch(process.env.API_HOST + '/api/shopping-carts', {\n    method: 'POST',\n    body: JSON.stringify({\n      data: {\n        AccountID: jwt,\n        ProductID: product.id,\n        Quantity: quantity || 1,\n        UnitCost: product.attributes.Price,\n        Subtotal: product.attributes.Price\n      }\n    }),\n    headers: myHeaders\n  }).then(response => response.json()).then(result => {\n    dispatchCart({\n      type: 'ADD_TO_CART',\n      data: result.data,\n      product: product\n    });\n  });\n  fetch(process.env.API_HOST + `/api/orders`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: {\n        AccountID: data.attributes.AccountID,\n        Status: 'PROCESSING',\n        CodeDiscount: '',\n        ProductID: data.attributes.ProductID,\n        Quantity: data.attributes.Quantity,\n        UnitCost: data.attributes.UnitCost,\n        Subtotal: data.attributes.Subtotal,\n        PurchaseDate: today.toDateString()\n      }\n    })\n  }).then(response => response.json()).then(data => {});\n};\n\nclass Payments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handlePayment\", async (cart, userData) => {\n      const jwt = localStorage.getItem('jwt-ktxshop');\n      fetch(process.env.API_HOST + `/api/accounts/${jwt}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: {\n            PhoneNumber: userData.phone.value,\n            FullName: userData.fullName.value,\n            Address: userData.address.value\n          }\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      cart.cart.addedItems.map(item => {\n        handleOrder(item);\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"order-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      disabled: this.props.disabled,\n      className: `default-btn`,\n      onClick: () => this.handlePayment(this.props.userData, this.props.stateSchema),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"\\u0110\\u1EB7t h\\xE0ng\")));\n  }\n\n}\n\nexport default Payments;","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/payments/Payment.js"],"names":["React","Router","StripeCheckout","toast","handleOrder","data","timeElapsed","Date","now","today","myHeaders","Headers","append","fetch","process","env","API_HOST","method","body","JSON","stringify","AccountID","jwt","ProductID","product","id","Quantity","quantity","UnitCost","attributes","Price","Subtotal","headers","then","response","json","result","dispatchCart","type","Status","CodeDiscount","PurchaseDate","toDateString","Payments","Component","cart","userData","localStorage","getItem","PhoneNumber","phone","value","FullName","fullName","Address","address","console","log","addedItems","map","item","render","props","disabled","handlePayment","stateSchema"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router'\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { toast } from 'react-toastify';\r\nconst handleOrder = async (data) => {\r\n    const timeElapsed = Date.now();\r\n    const today = new Date(timeElapsed);\r\n    let myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\")\r\n    await fetch(process.env.API_HOST + '/api/shopping-carts', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            data: {\r\n                AccountID: jwt,\r\n                ProductID: product.id,\r\n                Quantity: quantity || 1,\r\n                UnitCost: product.attributes.Price,\r\n                Subtotal: product.attributes.Price,\r\n            }\r\n        }),\r\n        headers: myHeaders\r\n    })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            dispatchCart({ type: 'ADD_TO_CART', data: result.data, product: product })\r\n        })\r\n    fetch(process.env.API_HOST + `/api/orders`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            data: {\r\n                AccountID: data.attributes.AccountID,\r\n                Status: 'PROCESSING',\r\n                CodeDiscount: '',\r\n                ProductID: data.attributes.ProductID,\r\n                Quantity: data.attributes.Quantity,\r\n                UnitCost: data.attributes.UnitCost,\r\n                Subtotal: data.attributes.Subtotal,\r\n                PurchaseDate: today.toDateString(),\r\n                \r\n            }\r\n        }),\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n        });\r\n}\r\n\r\nclass Payments extends React.Component {\r\n    handlePayment = async (cart, userData) => {\r\n        const jwt = localStorage.getItem('jwt-ktxshop');\r\n        fetch(process.env.API_HOST + `/api/accounts/${jwt}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                data: {\r\n                    PhoneNumber: userData.phone.value,\r\n                    FullName: userData.fullName.value,\r\n                    Address: userData.address.value,\r\n                }\r\n\r\n\r\n            }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            });\r\n        cart.cart.addedItems.map((item) => {\r\n            handleOrder(item);\r\n        })\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"order-btn\">\r\n                    <button disabled={this.props.disabled} className={`default-btn`} onClick={() => this.handlePayment(this.props.userData, this.props.stateSchema)}>\r\n                        Đặt hàng\r\n                    </button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default (Payments)"]},"metadata":{},"sourceType":"module"}