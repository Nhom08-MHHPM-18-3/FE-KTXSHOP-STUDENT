{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\contexts\\\\UserContext.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useReducer } from \"react\";\nlet account;\nexport const UserContext = React.createContext();\n\nconst userReducer = (state, action) => {\n  // User Logout\n  if (action.type === 'USRER_LOGOUT') {\n    window.localStorage.clear();\n    return _objectSpread(_objectSpread({}, state), {}, {\n      login: false\n    });\n  } // Check if user login\n\n\n  if (action.type === 'CHECK_USER_LOGIN') {\n    const jwt = localStorage.getItem('jwt-ktxshop');\n\n    if (jwt === \"Ktxshop\") {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  } // User Login\n\n\n  if (action.type === 'USER_LOGIN') {\n    let data;\n    fetchUser(action.username).then(res => {\n      data = res;\n    });\n    console.log(data);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      account: data,\n      login: true\n    });\n  }\n};\n\nconst fetchUser = async username => {\n  let data;\n\n  const qs = require('qs');\n\n  const query = qs.stringify({\n    filters: {\n      UserName: {\n        $eq: username\n      }\n    }\n  }, {\n    encodeValuesOnly: true\n  });\n  await fetch(process.env.API_HOST + `/api/accounts?${query}`).then(response => response.json()).then(res => {\n    if (res.data) {\n      data = res.data[0].attributes;\n    }\n  });\n  account = data;\n  return data;\n};\n\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    0: user,\n    1: dispatchUser\n  } = useReducer(userReducer, {\n    account: {},\n    login: false\n  });\n\n  const userLogin = (username, password) => {\n    dispatchUser({\n      type: 'USER_LOGIN',\n      username: username,\n      password: password\n    });\n  };\n\n  useEffect(() => {\n    dispatchUser({\n      type: 'CHECK_USER_LOGIN'\n    });\n  }, []);\n  return __jsx(UserContext.Provider, {\n    value: {\n      login: user.login,\n      account: user.account,\n      userLogin: userLogin\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(UserProvider, \"PsF/p2kvWJI+krOtlHpU7euB3x0=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/contexts/UserContext.js"],"names":["React","useEffect","useReducer","account","UserContext","createContext","userReducer","state","action","type","window","localStorage","clear","login","jwt","getItem","data","fetchUser","username","then","res","console","log","qs","require","query","stringify","filters","UserName","$eq","encodeValuesOnly","fetch","process","env","API_HOST","response","json","attributes","UserProvider","children","user","dispatchUser","userLogin","password"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\r\nlet account;\r\nexport const UserContext = React.createContext();\r\nconst userReducer = (state, action) => {\r\n\r\n    // User Logout\r\n    if (action.type === 'USRER_LOGOUT') {\r\n        window.localStorage.clear();\r\n        return {\r\n            ...state,\r\n            login: false\r\n        }\r\n    }\r\n\r\n    // Check if user login\r\n    if (action.type === 'CHECK_USER_LOGIN') {\r\n        const jwt = localStorage.getItem('jwt-ktxshop');\r\n\r\n        if (jwt === \"Ktxshop\") {\r\n            return {\r\n                ...state,\r\n                login: true\r\n            }\r\n        } else {\r\n            return {\r\n                ...state,\r\n                login: false\r\n            }\r\n        }\r\n    }\r\n\r\n    // User Login\r\n    if (action.type === 'USER_LOGIN') {\r\n\r\n        let data; \r\n         fetchUser(action.username).then(res =>{data = res})\r\n         console.log(data);\r\n        return {\r\n            ...state,\r\n            account: data,\r\n            login: true\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\nconst fetchUser = async (username) => {\r\n    let data;\r\n    const qs = require('qs');\r\n    const query = qs.stringify({\r\n        filters: {\r\n            UserName: {\r\n                $eq: username,\r\n            },\r\n        },\r\n    }, {\r\n        encodeValuesOnly: true,\r\n    });\r\n    await fetch(process.env.API_HOST + `/api/accounts?${query}`)\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if (res.data) {\r\n                data = res.data[0].attributes;\r\n            }\r\n        });\r\n        account = data;\r\n    return data;\r\n}\r\nexport const UserProvider = ({ children }) => {\r\n    const [user, dispatchUser] = useReducer(userReducer, {\r\n        account: {},\r\n        login: false\r\n    })\r\n    const userLogin = (username, password) => {\r\n        dispatchUser({ type: 'USER_LOGIN', username: username, password: password })\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatchUser({ type: 'CHECK_USER_LOGIN' })\r\n    }, [])\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                login: user.login,\r\n                account: user.account,\r\n                userLogin: userLogin,\r\n            }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}