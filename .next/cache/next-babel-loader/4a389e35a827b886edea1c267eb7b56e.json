{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\Cart\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer } from \"react\";\nimport CartContext from \"../../contexts/CartContext\";\nconst initState = {\n  products: [],\n  addedItems: [],\n  total: 0,\n  shipping: 0,\n  login: false\n};\n\nconst cartReducer = (state = initState, action) => {\n  // User Logout\n  if (action.type === USRER_LOGOUT) {\n    cookie.remove('_livani_token_');\n    return _objectSpread(_objectSpread({}, state), {}, {\n      login: false\n    });\n  } // Check if user login\n\n\n  if (action.type === CHECK_USRER_LOGIN) {\n    const getToken = cookie.get('_livani_token_');\n\n    if (getToken == token) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  } // User Login\n\n\n  if (action.type === USRER_LOGIN) {\n    cookie.set('_livani_token_', token);\n    const getToken = cookie.get('_livani_token_'); // console.log('token', getToken)\n\n    if (getToken == token) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: true\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: false\n      });\n    }\n  }\n\n  if (action.type === ADD_PRODUCTS) {\n    let productsArray = [];\n    dbOrderRef.get().then(res => {\n      res.forEach(doc => {\n        let productsObj = doc.data();\n        productsObj.id = doc.id;\n        productsArray.push(productsObj);\n      });\n    }); // console.log('www', productsArray)\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      products: productsArray\n    });\n  }\n\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_QUANTITY_WITH_NUMBER) {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice * action.qty\n      });\n    } else {\n      addedItem.quantity = action.qty; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice * action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.newPrice * itemToRemove.quantity;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  }\n\n  if (action.type === ADD_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.newPrice;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: newTotal\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    let addedItem = state.products.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: new_items,\n        total: newTotal\n      });\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 30\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 30\n    });\n  }\n\n  if (action.type === RESET_CART) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    0: number,\n    1: setNumber\n  } = useState({\n    products: [],\n    addedItems: [],\n    total: 0\n  });\n\n  const updateNumber = () => {\n    setNumber({\n      number: Math.random()\n    });\n  };\n\n  return __jsx(CartContext.Provider, {\n    value: {\n      number: number,\n      updateNumber: updateNumber\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(CartProvider, \"JfZYxDrhC7mo5ENbEAfmuHwnlLU=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/Cart/CartProvider.js"],"names":["React","useState","useReducer","CartContext","initState","products","addedItems","total","shipping","login","cartReducer","state","action","type","USRER_LOGOUT","cookie","remove","CHECK_USRER_LOGIN","getToken","get","token","USRER_LOGIN","set","ADD_PRODUCTS","productsArray","dbOrderRef","then","res","forEach","doc","productsObj","data","id","push","ADD_TO_CART","addedItem","find","item","existed_item","quantity","newPrice","newTotal","ADD_QUANTITY_WITH_NUMBER","qty","REMOVE_ITEM","itemToRemove","new_items","filter","ADD_QUANTITY","SUB_QUANTITY","ADD_SHIPPING","RESET_CART","CartProvider","children","number","setNumber","updateNumber","Math","random"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\n\r\nimport CartContext from \"../../contexts/CartContext\";\r\nconst initState = {\r\n    products: [],\r\n    addedItems:[],\r\n    total: 0,\r\n    shipping: 0,\r\n    login: false\r\n}\r\nconst cartReducer = (state = initState, action) => {\r\n\r\n    // User Logout\r\n    if (action.type === USRER_LOGOUT){\r\n        cookie.remove('_livani_token_')\r\n        return{\r\n            ...state,\r\n            login: false\r\n        }\r\n    }\r\n\r\n    // Check if user login\r\n    if (action.type === CHECK_USRER_LOGIN){\r\n        const getToken = cookie.get('_livani_token_')\r\n\r\n        if (getToken == token){\r\n            return{\r\n                ...state,\r\n                login: true\r\n            }\r\n        } else {\r\n            return{\r\n                ...state,\r\n                login: false\r\n            }\r\n        }\r\n    }\r\n\r\n    // User Login\r\n    if(action.type === USRER_LOGIN){\r\n        cookie.set('_livani_token_', token);\r\n\r\n        const getToken = cookie.get('_livani_token_')\r\n\r\n        // console.log('token', getToken)\r\n\r\n        if (getToken == token){\r\n            return{\r\n                ...state,\r\n                login: true\r\n            }\r\n        } else {\r\n            return{\r\n                ...state,\r\n                login: false\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type === ADD_PRODUCTS){\r\n        let productsArray = [];\r\n        dbOrderRef.get()\r\n        .then(res => {\r\n            res.forEach(doc => {\r\n                let productsObj = doc.data();\r\n                productsObj.id = doc.id;\r\n                productsArray.push(productsObj)\r\n            });\r\n        });\r\n\r\n        // console.log('www', productsArray)\r\n        \r\n        return{\r\n            ...state,\r\n            products: productsArray\r\n        }\r\n    }\r\n   \r\n    if(action.type === ADD_TO_CART){\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n        if(existed_item)\r\n        {\r\n            addedItem.quantity += 1 \r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice \r\n            }\r\n        } else {\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice \r\n            \r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    if(action.type === ADD_QUANTITY_WITH_NUMBER){\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n        if(existed_item)\r\n        {\r\n            addedItem.quantity += action.qty\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice * action.qty\r\n            }\r\n        } else {\r\n            addedItem.quantity = action.qty;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice * action.qty\r\n            \r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.newPrice * itemToRemove.quantity );\r\n\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if(action.type === ADD_QUANTITY){\r\n        let addedItem = state.products.find(item=> item.id === action.id)\r\n        addedItem.quantity += 1 \r\n        let newTotal = state.total + addedItem.newPrice\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if(action.type === SUB_QUANTITY){  \r\n        let addedItem = state.products.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        } else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type === ADD_SHIPPING){\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping += 30\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SUB_SHIPPING'){\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping -= 30\r\n        }\r\n    }\r\n\r\n    if(action.type === RESET_CART){\r\n        return {\r\n            ...state,\r\n            addedItems: [],\r\n            total: 0,\r\n            shipping: 0\r\n        }\r\n    }\r\n    \r\n    else {\r\n        return state\r\n    }\r\n}\r\nexport const CartProvider = ({ children }) => {\r\n    const [number, setNumber] = useState({\r\n        products: [],\r\n        addedItems: [],\r\n        total: 0,\r\n    });\r\n\r\n    const updateNumber = () => {\r\n        setNumber({\r\n            number: Math.random()\r\n        });\r\n    }\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                number: number,\r\n                updateNumber: updateNumber\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}