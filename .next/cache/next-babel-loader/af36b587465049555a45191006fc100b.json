{"ast":null,"code":"var _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\payments\\\\Payment.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { toast } from 'react-toastify';\n\nconst handleOrder = async data => {\n  const timeElapsed = Date.now();\n  const today = new Date(timeElapsed);\n  let myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  await fetch(process.env.API_HOST + '/api/orders', {\n    method: 'POST',\n    body: JSON.stringify({\n      data: {\n        AccountID: data.attributes.AccountID,\n        Status: 'PROCESSING',\n        CodeDiscount: '',\n        ProductID: data.attributes.ProductID,\n        Quantity: data.attributes.Quantity,\n        UnitCost: data.attributes.UnitCost,\n        Subtotal: data.attributes.Subtotal,\n        PurchaseDate: today.toDateString()\n      }\n    }),\n    headers: myHeaders\n  }).then(response => response.json()).then(result => {});\n};\n\nclass Payments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handlePayment\", async (cart, userData) => {\n      const jwt = localStorage.getItem('jwt-ktxshop');\n      fetch(process.env.API_HOST + `/api/accounts/${jwt}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: {\n            PhoneNumber: userData.phone.value,\n            FullName: userData.fullName.value,\n            Address: userData.address.value\n          }\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      cart.cart.addedItems.map(item => {\n        handleOrder(item);\n      });\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"order-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      disabled: this.props.disabled,\n      className: `default-btn`,\n      onClick: () => this.handlePayment(this.props.userData, this.props.stateSchema),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"\\u0110\\u1EB7t h\\xE0ng\")));\n  }\n\n}\n\nexport default Payments;","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/payments/Payment.js"],"names":["React","Router","StripeCheckout","toast","handleOrder","data","timeElapsed","Date","now","today","myHeaders","Headers","append","fetch","process","env","API_HOST","method","body","JSON","stringify","AccountID","attributes","Status","CodeDiscount","ProductID","Quantity","UnitCost","Subtotal","PurchaseDate","toDateString","headers","then","response","json","result","Payments","Component","cart","userData","jwt","localStorage","getItem","PhoneNumber","phone","value","FullName","fullName","Address","address","console","log","addedItems","map","item","render","props","disabled","handlePayment","stateSchema"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router'\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { toast } from 'react-toastify';\r\nconst handleOrder = async (data) => {\r\n    const timeElapsed = Date.now();\r\n    const today = new Date(timeElapsed);\r\n    let myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\")\r\n    await fetch(process.env.API_HOST + '/api/orders', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            data: {\r\n                AccountID: data.attributes.AccountID,\r\n                Status: 'PROCESSING',\r\n                CodeDiscount: '',\r\n                ProductID: data.attributes.ProductID,\r\n                Quantity: data.attributes.Quantity,\r\n                UnitCost: data.attributes.UnitCost,\r\n                Subtotal: data.attributes.Subtotal,\r\n                PurchaseDate: today.toDateString(),\r\n                \r\n            }\r\n        }),\r\n        headers: myHeaders\r\n    })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            \r\n        })\r\n    \r\n}\r\n\r\nclass Payments extends React.Component {\r\n    handlePayment = async (cart, userData) => {\r\n        const jwt = localStorage.getItem('jwt-ktxshop');\r\n        fetch(process.env.API_HOST + `/api/accounts/${jwt}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                data: {\r\n                    PhoneNumber: userData.phone.value,\r\n                    FullName: userData.fullName.value,\r\n                    Address: userData.address.value,\r\n                }\r\n\r\n\r\n            }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            });\r\n        cart.cart.addedItems.map((item) => {\r\n            handleOrder(item);\r\n        })\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"order-btn\">\r\n                    <button disabled={this.props.disabled} className={`default-btn`} onClick={() => this.handlePayment(this.props.userData, this.props.stateSchema)}>\r\n                        Đặt hàng\r\n                    </button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default (Payments)"]},"metadata":{},"sourceType":"module"}