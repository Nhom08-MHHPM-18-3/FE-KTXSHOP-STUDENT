{"ast":null,"code":"var _jsxFileName = \"F:\\\\N\\u0103m 4 h\\u1ECDc k\\u1EF3 1\\\\M\\xF4 h\\xECnh h\\xF3a ph\\u1EA7n m\\u1EC1m\\\\New folder (2)\\\\components\\\\Cart\\\\CartProvider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useReducer, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport CartContext from \"../../contexts/CartContext\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD_PRODUCTS') {\n    let productsArray = [];\n    productsArray = action.payload; // console.log('www', productsArray)\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      products: productsArray\n    });\n  }\n\n  if (action.type === 'INIT_CART') {\n    let productsArray = [];\n    productsArray = action.payload;\n    console.log(action.payload);\n    let newTotal = 0;\n\n    for (let i = 0; i < productsArray.length; i++) {\n      newTotal += productsArray[i].attributes.Price;\n      console.log(newTotal);\n    }\n\n    console.log(newTotal);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: productsArray,\n      total: action.total\n    });\n  }\n\n  if (action.type === 'ADD_TO_CART') {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === 'ADD_QUANTITY_WITH_NUMBER') {\n    let addedItem = state.products.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.newPrice * action.qty\n      });\n    } else {\n      addedItem.quantity = action.qty; //calculating the total\n\n      let newTotal = state.total + addedItem.newPrice * action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === 'REMOVE_ITEM') {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.newPrice * itemToRemove.quantity;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  }\n\n  if (action.type === 'ADD_QUANTITY') {\n    let addedItem = state.products.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.newPrice;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: newTotal\n    });\n  }\n\n  if (action.type === 'SUB_QUANTITY') {\n    let addedItem = state.products.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: new_items,\n        total: newTotal\n      });\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.newPrice;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === 'ADD_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 30\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 30\n    });\n  }\n\n  if (action.type === 'RESET_CART') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nexport const CartProvider = ({\n  children\n}) => {\n  const user = useContext(UserContext);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: total,\n    1: setTotal\n  } = useState([]);\n  const {\n    0: cart,\n    1: dispatchCart\n  } = useReducer(cartReducer, {\n    products: [],\n    addedItems: [],\n    total: 0,\n    shipping: 0,\n    login: false\n  });\n\n  const removeItem = id => {\n    dispatchCart({\n      type: 'REMOVE_ITEM',\n      id: id\n    });\n  };\n\n  const addToCart = id => {\n    dispatchCart({\n      type: 'ADD_TO_CART',\n      id: id\n    });\n  };\n\n  const addQuantity = id => {\n    dispatchCart({\n      type: 'ADD_QUANTITY',\n      id: id\n    });\n  };\n\n  const subQuantity = id => {\n    dispatchCart({\n      type: 'SUB_QUANTITY',\n      id: id\n    });\n  };\n\n  useEffect(() => {\n    fecthProduct();\n  }, []);\n\n  const fecthProduct = async () => {\n    const qs = require('qs');\n\n    const query = qs.stringify({\n      sort: ['id:desc'],\n      populate: '*'\n    }, {\n      encodeValuesOnly: true\n    });\n    await fetch(process.env.API_HOST + `/api/products?${query}`).then(response => response.json()).then(res => {\n      if (res.data && res.data[0] && res.data[0].attributes) {\n        const dataProduct = res.data;\n        dataProduct.map((item, index) => {\n          data.push(item);\n          setTotal(total + item.attributes.Price);\n          setData([...data]);\n          dispatchCart({\n            type: 'ADD_PRODUCTS',\n            payload: data\n          });\n          dispatchCart({\n            type: 'INIT_CART',\n            payload: data,\n            total: total\n          });\n        });\n      }\n    });\n  };\n\n  return __jsx(CartContext.Provider, {\n    value: {\n      cart: cart,\n      removeItem: removeItem,\n      addToCart: addToCart,\n      addQuantity: addQuantity,\n      subQuantity: subQuantity\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["F:/Năm 4 học kỳ 1/Mô hình hóa phần mềm/New folder (2)/components/Cart/CartProvider.js"],"names":["React","useState","useReducer","useEffect","useContext","UserContext","CartContext","cartReducer","state","action","type","productsArray","payload","products","console","log","newTotal","i","length","attributes","Price","addedItems","total","addedItem","find","item","id","existed_item","quantity","newPrice","qty","itemToRemove","new_items","filter","shipping","CartProvider","children","user","data","setData","setTotal","cart","dispatchCart","login","removeItem","addToCart","addQuantity","subQuantity","fecthProduct","qs","require","query","stringify","sort","populate","encodeValuesOnly","fetch","process","env","API_HOST","then","response","json","res","dataProduct","map","index","push"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../contexts/UserContext\";\r\nimport CartContext from \"../../contexts/CartContext\";\r\n\r\nconst cartReducer = (state, action) => {\r\n\r\n\r\n    if (action.type === 'ADD_PRODUCTS') {\r\n        let productsArray = [];\r\n        productsArray = action.payload;\r\n\r\n        // console.log('www', productsArray)\r\n\r\n        return {\r\n            ...state,\r\n            products: productsArray\r\n        }\r\n    }\r\n    if (action.type === 'INIT_CART') {\r\n        let productsArray = [];\r\n        productsArray = action.payload;\r\n        console.log(action.payload)\r\n        let newTotal = 0;\r\n        for (let i = 0; i < productsArray.length; i++) {\r\n            newTotal += productsArray[i].attributes.Price;\r\n            console.log(newTotal);\r\n        }\r\n        console.log(newTotal);\r\n        return {\r\n            ...state,\r\n            addedItems: productsArray,\r\n            total: action.total\r\n        }\r\n    }\r\n\r\n    if (action.type === 'ADD_TO_CART') {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        if (existed_item) {\r\n            addedItem.quantity += 1\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice\r\n            }\r\n        } else {\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice\r\n\r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total: newTotal\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (action.type === 'ADD_QUANTITY_WITH_NUMBER') {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        if (existed_item) {\r\n            addedItem.quantity += action.qty\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.newPrice * action.qty\r\n            }\r\n        } else {\r\n            addedItem.quantity = action.qty;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.newPrice * action.qty\r\n\r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total: newTotal\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    if (action.type === 'REMOVE_ITEM') {\r\n        let itemToRemove = state.addedItems.find(item => action.id === item.id)\r\n        let new_items = state.addedItems.filter(item => action.id !== item.id)\r\n\r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.newPrice * itemToRemove.quantity);\r\n\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === 'ADD_QUANTITY') {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        addedItem.quantity += 1\r\n        let newTotal = state.total + addedItem.newPrice\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SUB_QUANTITY') {\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //if the qt == 0 then it should be removed\r\n        if (addedItem.quantity === 1) {\r\n            let new_items = state.addedItems.filter(item => item.id !== action.id)\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        } else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.newPrice\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (action.type === 'ADD_SHIPPING') {\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping += 30\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SUB_SHIPPING') {\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping -= 30\r\n        }\r\n    }\r\n\r\n    if (action.type === 'RESET_CART') {\r\n        return {\r\n            ...state,\r\n            addedItems: [],\r\n            total: 0,\r\n            shipping: 0\r\n        }\r\n    }\r\n\r\n    else {\r\n        return state\r\n    }\r\n}\r\nexport const CartProvider = ({ children }) => {\r\n    const user = useContext(UserContext);\r\n    const [data, setData] = useState([]);\r\n    const [total, setTotal] = useState([]);\r\n    const [cart, dispatchCart] = useReducer(cartReducer, {\r\n        products: [],\r\n        addedItems: [],\r\n        total: 0,\r\n        shipping: 0,\r\n        login: false\r\n    })\r\n\r\n    const removeItem = (id) => {\r\n        dispatchCart({ type: 'REMOVE_ITEM', id: id })\r\n    }\r\n    const addToCart = (id) => {\r\n        dispatchCart({ type: 'ADD_TO_CART', id: id })\r\n    }\r\n    const addQuantity = (id) => {\r\n        dispatchCart({ type: 'ADD_QUANTITY', id: id })\r\n    }\r\n    const subQuantity = (id) => {\r\n        dispatchCart({ type: 'SUB_QUANTITY', id: id })\r\n    }\r\n    useEffect(() => {\r\n        fecthProduct();\r\n    }, [])\r\n    const fecthProduct = async () => {\r\n        const qs = require('qs');\r\n        const query = qs.stringify({\r\n            sort: ['id:desc',],\r\n            populate: '*'\r\n        }, {\r\n            encodeValuesOnly: true,\r\n        });\r\n        await fetch(process.env.API_HOST + `/api/products?${query}`)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.data && res.data[0] && res.data[0].attributes) {\r\n                    const dataProduct = res.data;\r\n                    dataProduct.map((item, index) => {\r\n                        data.push(item)\r\n\r\n                        setTotal(total + item.attributes.Price)\r\n                        setData([...data])\r\n                        dispatchCart({ type: 'ADD_PRODUCTS', payload: data })\r\n                        dispatchCart({ type: 'INIT_CART', payload: data, total: total })\r\n                    })\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                cart: cart,\r\n                removeItem: removeItem,\r\n                addToCart: addToCart,\r\n                addQuantity: addQuantity,\r\n                subQuantity: subQuantity,\r\n\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}